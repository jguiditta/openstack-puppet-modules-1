From 4768776d777b6eb3511ece4d8d371ed78d408fd3 Mon Sep 17 00:00:00 2001
From: Gael Chamoulaud <gchamoul@redhat.com>
Date: Thu, 9 Jul 2015 12:05:24 +0200
Subject: [PATCH] Update Puppet Modules (openstack github org only) to their
 latest masters

Update ceilometer to f17b3442402529281bdca9b2f70697e04bcfe216

f17b3442402529281bdca9b2f70697e04bcfe216 Fix git clone for locally running tests
6f5f5b04c49d3c55cb56e6949a01d107787294d2 Correct `puppet module list` check in beaker
643469f5caeb00309b5f08ca67dded8cd1eb4094 Use module install script for acceptance tests
bf194d2f7593d769ea442959b90ec972cfb01c87 Use beaker-puppet_install_helper to install puppet

Update cinder to 15fd1a81b047342e71bfe939cf059eb4fd143e4d

15fd1a81b047342e71bfe939cf059eb4fd143e4d Fix git clone for locally running tests
0ac8840967809469ddc8db225b646d8b8a1a3707 Merge "Bump puppetlabs-rabbitmq version"
627b1f74602a3fb5b87ba12f87741283d3a9495d Merge "Correct `puppet module list` check in beaker"
deeecca15bf25dbb2cb4ce7b3260d4fe3fa11d6d Merge "Use module install script for acceptance tests"
c4ea344f1db7e022d51078476531ca8b430a51c8 Correct `puppet module list` check in beaker
ba269f48e7ed530a180fe053ee7a61408c0ef32d Use module install script for acceptance tests
8dcdd3207b6df34265ce337bc65a7fd90d7419ed Fix comments to note rabbit_password is required
64f26875f3797fca88110c752f247660f575cc9e Merge "Use beaker-puppet_install_helper to install puppet"
94982d76ddb97d8a9001672f5f0df3174be136c2 Bump puppetlabs-rabbitmq version
488a6bf0b93efb8cafbe77a410a218dac3c07e7f Use beaker-puppet_install_helper to install puppet
28c9284cd4462062d3ab128d141eebc541f4e163 Use beaker-puppet_install_helper to install puppet

Update glance to 0bb7577f7e4189495a148ca91f4f92c118e499e7

0bb7577f7e4189495a148ca91f4f92c118e499e7 Fix git clone for locally running tests
87d02193440496dce00248f89abe323655df36de Merge "Fix section names for parameters"
f13dd0ec89697de6669187284668434cd0e44487 Correct `puppet module list` check in beaker
2ef0788e036bb1144b5a4b23d5c18de62ce28ada Use module install script for acceptance tests
05b0969c4d61a61a30b46fe5132f087fcab45967 Fix section names for parameters
646a6cd15f2c358c6fde25dbb795615f45913d96 Use beaker-puppet_install_helper to install puppet

Update gnocchi to 388ace2495661ff909b45c00471a121b5f2d18e3

388ace2495661ff909b45c00471a121b5f2d18e3 Fix git clone for locally running tests
5649f1134404d0fe798ed3b2b6eb3b4c1eb440a0 Use module install script for acceptance tests
fe5d50fa115a23ee63292797ee8750a16f4494e2 Correct `puppet module list` check in beaker
2abf60b7e00772c2af8c97e7938309ce0115b891 Use beaker-puppet_install_helper to install puppet

Update heat to 8e742b8d09e3bded06e9529ccd5e7f38e527ab5d

8e742b8d09e3bded06e9529ccd5e7f38e527ab5d Fix git clone for locally running tests
ecbc15f527c20079e66a46a0bc15d5e768da5574 Use module install script for acceptance tests
cb952b7cfbd9dfefb82cd4a17c58410d3514ac31 Correct `puppet module list` check in beaker
9d0bd501db219116f5b6501f56f2478cb6203664 Use beaker-puppet_install_helper to install puppet

Update horizon to 6e11fbf346560dab461964e53bcb1c817707abc5

6e11fbf346560dab461964e53bcb1c817707abc5 Fix git clone for locally running tests
092cbdccea20d4c8b866afe664d25eff29da9527 Use module install script for acceptance tests
859911cbc6f2cfcda6a3b2a9d033646992783596 Correct `puppet module list` check in beaker
ee92a781ecd167269494647596f3c8510d831868 Use beaker-puppet_install_helper to install puppet

Update ironic to 886a9c0aa2c8ac6167e2d95a60c55bbd6977f82b

886a9c0aa2c8ac6167e2d95a60c55bbd6977f82b Fix git clone for locally running tests
a440277c650f00e5c11d4b05b4ed13ce487ee49b Merge "keystone/auth: make service description configurable"
e3ba6ee11e7ddd5f4866b6153012557158a84917 Use module install script for acceptance tests
4ef5ff1f4dea22c6a5a8b2c6573df11029f15f27 Use beaker-puppet_install_helper to install puppet
3d0ad7e4802536990430d38fbb555f4653a429a3 Correct `puppet module list` check in beaker
960baa08d5c3d351ae40b86408fbf4612e5903f5 keystone/auth: make service description configurable

Update keystone to e0e87604b8199c0ac0d443999153f88fb7797a9c

e0e87604b8199c0ac0d443999153f88fb7797a9c support for keystone v3 api - the project resource
9b69a67fa0461c8c4ea05175d636090c6fccc06c support for keystone v3 api - the domain resource
a054c503f337b8eb4f352c0cb19e12b2b44ec15e support for keystone v3 api - v3 domain utility code
dbf0530c8c8091b3866270ad9b2599bc2fbeb36b support for keystone v3 api - keystone_role resource
56ac0fd3093fe7441799835350c68220d3f1ddcf Merge "Fix git clone for locally running tests"
74d487ea625bcfa545e22111b98823cd50ef18f0 Merge "support for keystone v3 api - the keystone_service resource"
0fb532bd2e39e4a6c710a1c7adb6f7a55b19a0dc Fix git clone for locally running tests
aee4a8f8fc09aab33def4fdb758930f3190e44b2 Correct `puppet module list` check in beaker
61da0a1388624fb81362994b3a4afaf2fd6e0b9f support for keystone v3 api - the keystone_service resource
d6f926831e977b73986a1f35df8b96e4fe97e172 fix pep8 errors
ed1665bf349ae5e2478f4f752a2e69f07820901b Fix module install in beaker
d857dfb9dfe744e2c1161e1f952582fce2514b7c Merge "Use module install script for acceptance tests"
b6dc4acefffcba0981013e520c358c4fffda56c3 Use module install script for acceptance tests
19d7d87792044eed1e56fa64aaf38f000112fa92 Use beaker-puppet_install_helper to install puppet

Update manila to ff018bdef812bacfe512663c1cc0b92c7d1f26b2

ff018bdef812bacfe512663c1cc0b92c7d1f26b2 Fix git clone for locally running tests
423066cde6b572773dfcb3d87e92db95aefddbf7 Merge "Bump puppetlabs-rabbitmq version"
daae6cc9e3990f2a23859fd5e3b290413ac17cb4 Use module install script for acceptance tests
fa98c81679ab490829bc422bc38b5c950956c430 Correct `puppet module list` check in beaker
96153b206cbc9fb220436dff31eff5b2b3f06d24 Merge "Add manila share manager parameters"
877e3d2eee7b1c504f0c27e644f9ca118cc06e4c Bump puppetlabs-rabbitmq version
80d8a195ba8d524d31708900b7b07c96de124930 Use beaker-puppet_install_helper to install puppet
835fd75b242fefd65a491a584367e65c1f6a9d66 Add manila share manager parameters

Update neutron to 36b463c003f94fe23c3d9eff207bbf5005ee470c

36b463c003f94fe23c3d9eff207bbf5005ee470c Fix git clone for locally running tests
2e4b49b355f033ec719e86dc30eb45a62a56497f Merge "Use module install script for acceptance tests"
107d6183dbd76c87a118332fdfb5746cd633e940 Merge "Correct `puppet module list` check in beaker"
6e786883de738b057c3f7e3736c9f5dcd9ac2dd0 Merge "Fix parsing of network gateway id for router"
4f7c8573aa75f483580e9101d9fde4bd2fbb7240 Use module install script for acceptance tests
df03f48614301ba4bf8893e3cdbde34d51769b22 Correct `puppet module list` check in beaker
13dab2fa536af9b925adafcd191c47a367dce5b4 Merge "Add ability to specify auth_region"
5d181f6163e26ee868cffbe94c8bc19dc3021dff Merge "Use beaker-puppet_install_helper to install puppet"
d9d6f2ae3860dd8353dec423d6717b51dcc7c37f Add ability to specify auth_region
b7d77998632935b9035360462c716050eb293909 Use beaker-puppet_install_helper to install puppet
7dc6dd0e71f3b7ba8617213f893d5ccdd32b6146 Fix parsing of network gateway id for router

Update nova to cb2d487fb9baf2c1902182973e29982b5389e769

cb2d487fb9baf2c1902182973e29982b5389e769 Fix git clone for locally running tests
c1afc9ec65dbe4d4b9ab80c867ba3984c24b8b6f Merge "Add scheduler_driver parameter to nova::scheduler class"
88cbb2bafa2dc40b4ff82168c4bb33d8bcd5076b Merge "Use proper spelling in nova::compute::ironic parameters"
3aeb0b62df45003b081e214888393fa5dd19052e Merge "Use module install script for acceptance tests"
9287e44499d0df3465a9d3f6ef69b973b007deb3 Merge "Correct `puppet module list` check in beaker"
c66cd1070bccccfe13baa85ceec876daff9af71f Merge "Bump puppetlabs-rabbitmq version"
2507aa3485ea6783f704af052d906f4c8d48d667 Use module install script for acceptance tests
e94fa305e75b79513e5f8f265ad3bc7737712dc1 Correct `puppet module list` check in beaker
bc51bec7bfd17c79755e2c99bd41c9dbeefe7018 Use proper spelling in nova::compute::ironic parameters
53211c8f70ab291cf011001311be6ffb1fbc5b4e Merge "Use beaker-puppet_install_helper to install puppet"
97501978460aa70f8a718af2d7f34df50e1e9bf2 Merge "keystone/auth: make service description configurable"
8b255da1658698e8000c4eba0a5bfef86d46eaaf Bump puppetlabs-rabbitmq version
4a9ee5a19fd69585cc369e0d7636e157020a231d Use beaker-puppet_install_helper to install puppet
75e2f0c0a2e3f2ba7318228e44c36ad378225816 keystone/auth: make service description configurable
36a24522c1ad2317f81a470b09be9e911ee8fd63 Add scheduler_driver parameter to nova::scheduler class

Update openstack_extras to ab8ddaff93e06d7fdbfb2c61ffe9113562dd82ad

ab8ddaff93e06d7fdbfb2c61ffe9113562dd82ad Merge "auth_file: allow to change the path"
6cb5b076f37a1c3afe66488c8b495e2d433df833 auth_file: allow to change the path

Update openstacklib to 78ef674e0e6bc73b3a0af7833025dc9786eaeaeb

78ef674e0e6bc73b3a0af7833025dc9786eaeaeb Fix git clone for locally running tests
5c0539e9e2885456b358870da167313547445f83 Use module install script for acceptance tests
b4f3e89ed94cfcb6639985358c20a628bb08b982 Use beaker-puppet_install_helper to install puppet
b5aa59ed2ae72996a4231c49e675047daf7472bb Correct `puppet module list` check in beaker
611fc6f64cf3f16dd4913164e5cab61a64f89186 Merge "acceptance: install RabbitMQ from stable RDO repo"
d20bb05a14d951b0c6780836082433f5d8b936de Bump puppetlabs-rabbitmq version
e76cd2b70e567340ade94d0216d5991a19b83794 acceptance: install RabbitMQ from stable RDO repo
b143b62573f978aed60432c36f9083a9ba5045e1 acceptance: install rabbitmq module using Puppet tool
c0f31b6cd7beb70eb0a9059d18bd81cb43c1b82d acceptance/rabbitmq: include apt in scope

Update sahara to 56d9a841bff7389d1128d40dad4a319988d547f1

56d9a841bff7389d1128d40dad4a319988d547f1 Fix git clone for locally running tests
b43e1fe81b453a0d052a1b0ec2cc01aa18e2843e Merge "Use module install script for acceptance tests"
0ba2231ec4af5b502f978681319bbbf8579ed22d Merge "Correct `puppet module list` check in beaker"
56a210717fe44095e075c901ab1e10214cf6228c Merge "Fix inifile version dependency in metadata"
b5567a69732f3e7d319850f0169926187c3f64e2 Use module install script for acceptance tests
48253b1662d77242ebef1011747816184b7c3fed Correct `puppet module list` check in beaker
830faa606d15b4802fecde29225149c3a7e89d98 Fix inifile version dependency in metadata
f4b12a3f2b2d6d8e76bcbf68bf702eb1d8b83e8b Use beaker-puppet_install_helper to install puppet

Update swift to 275fb9b111bbb30148e762afc0798aa891091cf2

275fb9b111bbb30148e762afc0798aa891091cf2 Fix git clone for locally running tests
be2b670a94977df30ab76bd1c7af3e23f6c38c94 Use module install script for acceptance tests
fbe109d212525b2e209971653e682200ec224b5e Correct `puppet module list` check in beaker
0b6d31b5ee888516a2a23db9b5daf5bea8d2d50e Merge "Add max_header_size field for PKI tokens"
f37b4ffbd75c7c35cc831dc32f11f73abdf4ec50 Add max_header_size field for PKI tokens
13c40e8d0dc344b5305a827dcc3966eedfbde937 Use beaker-puppet_install_helper to install puppet

Update tempest to ab9601ff339f6acb40901291133c03cf1b45d5ee

ab9601ff339f6acb40901291133c03cf1b45d5ee Fix git clone for locally running tests
261b5fcd4d981c8b2d57f2e37cea11928784e586 Merge "Use module install script for acceptance tests"
007dbc6c9feea5a0564a9e8f2a44f1d36e996304 Merge "Use beaker-puppet_install_helper to install puppet"
76e9b27a6b54a4c581540b52e8f193d87dacc9a1 Merge "Correct `puppet module list` check in beaker"
7d8c474bde90ac3a06b78fe3c470982bc190aebe Use module install script for acceptance tests
e214876af6034df687023781f9f0206a70734103 Use beaker-puppet_install_helper to install puppet
5cc421cf38f46014849367dbc5d11c4ef55f7bde Correct `puppet module list` check in beaker
e36e54005982e1ce6b948dbc46a9e587fea0621a Implement more Tempest options

Update tripleo to 717eb39ca7295e128ab99694ea3a7ae658b9528f

717eb39ca7295e128ab99694ea3a7ae658b9528f Merge "Add tripleo::packages"
03f4c4ffaa21bfea5b9da2a2592198c24cd1d61d Merge "Fix Heat 302 redirects"
cc67ec8170cc14c2cfbc7bcc486cc70257aa1d2d Merge "Remove database code from puppet-tripleo"
e8714e037268807d2fcdb735b8df7c958c8570ab Fix Heat 302 redirects
fdb0ec212f9c9ba9dea83e414abef6cb37b68014 Add tripleo::packages
3bb7dc0db4ad0236d63d0243b19b8b4bd4947ad7 Remove database code from puppet-tripleo

Update trove to 2636a384f67c2ac1513ac709f3ae4525668ccb62

2636a384f67c2ac1513ac709f3ae4525668ccb62 Fix git clone for locally running tests
2767c1fae6c81386582aa9ee7252b6a40ddf080c Use module install script for acceptance tests
650c8f9f559739e082158cd6ba52db3e89bbd756 Correct `puppet module list` check in beaker
83e9d07a6acb1c2c1391bf59af1a600d51f6c216 Use beaker-puppet_install_helper to install puppet

Update vswitch to e73073a120d833958d22925a1badbc1ccdc0f15a

e73073a120d833958d22925a1badbc1ccdc0f15a Fix git clone for locally running tests
9a56a307e877fb94e919fbe7a5a5f843737840fd Use module install script for acceptance tests
012ed899fecac87a95cd25c3bd54a079e6b3507d Use beaker-puppet_install_helper to install puppet
754e12d2dd1ebcaa26f24d3aa2565424f3f5ff83 Correct `puppet module list` check in beaker

Change-Id: I5d9e0b6cee51512e5c504faa75675ff45d10e893
Signed-off-by: Gael Chamoulaud <gchamoul@redhat.com>
---
 Puppetfile                                         |  38 +--
 ceilometer/Gemfile                                 |   1 +
 ceilometer/spec/spec_helper_acceptance.rb          |  55 +--
 cinder/Gemfile                                     |   1 +
 cinder/manifests/init.pp                           |   5 +-
 cinder/metadata.json                               |   2 +-
 cinder/spec/spec_helper_acceptance.rb              |  58 ++--
 glance/Gemfile                                     |   1 +
 glance/manifests/backend/cinder.pp                 |  30 +-
 glance/manifests/backend/swift.pp                  |  16 +-
 glance/manifests/backend/vsphere.pp                |  20 +-
 glance/spec/classes/glance_backend_cinder_spec.rb  |  40 +--
 glance/spec/classes/glance_backend_swift_spec.rb   |  32 +-
 glance/spec/classes/glance_backend_vsphere_spec.rb |  26 +-
 glance/spec/spec_helper_acceptance.rb              |  55 +--
 gnocchi/Gemfile                                    |   1 +
 gnocchi/spec/spec_helper_acceptance.rb             |  60 ++--
 heat/Gemfile                                       |   1 +
 heat/spec/spec_helper_acceptance.rb                |  58 ++--
 horizon/Gemfile                                    |   1 +
 horizon/spec/spec_helper_acceptance.rb             |  52 +--
 ironic/Gemfile                                     |   1 +
 ironic/manifests/keystone/auth.pp                  |   7 +-
 ironic/spec/classes/ironic_keystone_auth_spec.rb   |   6 +-
 ironic/spec/spec_helper_acceptance.rb              |  58 ++--
 keystone/Gemfile                                   |   1 +
 keystone/files/httpd/keystone.py                   |   3 +-
 keystone/lib/puppet/provider/keystone.rb           |  55 ++-
 keystone/lib/puppet/provider/keystone/util.rb      |  25 ++
 .../puppet/provider/keystone_domain/openstack.rb   | 143 ++++++++
 .../lib/puppet/provider/keystone_role/openstack.rb |   2 +-
 .../puppet/provider/keystone_service/openstack.rb  |  46 +--
 .../puppet/provider/keystone_tenant/openstack.rb   |  69 +++-
 keystone/lib/puppet/type/keystone_domain.rb        |  54 +++
 keystone/lib/puppet/type/keystone_tenant.rb        |  15 +
 keystone/spec/spec_helper_acceptance.rb            |  52 +--
 keystone/spec/unit/provider/keystone/util_spec.rb  |  29 ++
 .../provider/keystone_domain/openstack_spec.rb     | 192 +++++++++++
 .../unit/provider/keystone_role/openstack_spec.rb  |  17 +-
 .../provider/keystone_service/openstack_spec.rb    |   4 +-
 keystone/spec/unit/provider/keystone_spec.rb       |  70 +++-
 .../provider/keystone_tenant/openstack_spec.rb     | 232 ++++++++++---
 keystone/spec/unit/type/keystone_tenant_spec.rb    |  25 ++
 manila/Gemfile                                     |   1 +
 manila/manifests/backend/generic.pp                |  68 ++--
 manila/manifests/share/generic.pp                  |  61 ++--
 manila/metadata.json                               |   2 +-
 manila/spec/classes/manila_share_generic_spec.rb   |  23 +-
 manila/spec/spec_helper_acceptance.rb              |  57 ++--
 neutron/Gemfile                                    |   1 +
 .../lib/puppet/provider/neutron_router/neutron.rb  |   2 +-
 neutron/manifests/server.pp                        |  12 +
 neutron/spec/classes/neutron_server_spec.rb        |  14 +
 neutron/spec/spec_helper_acceptance.rb             |  60 ++--
 .../unit/provider/neutron_router/neutron_spec.rb   |  30 ++
 nova/Gemfile                                       |   1 +
 nova/manifests/compute/ironic.pp                   |  37 ++-
 nova/manifests/keystone/auth.pp                    |  81 +++--
 nova/manifests/scheduler.pp                        |  17 +-
 nova/metadata.json                                 |   2 +-
 nova/spec/classes/nova_compute_ironic_spec.rb      |  13 +
 nova/spec/classes/nova_scheduler_spec.rb           |  10 +
 nova/spec/spec_helper_acceptance.rb                |  61 ++--
 openstack_extras/manifests/auth_file.pp            |   7 +-
 .../classes/openstack_extras_auth_file_spec.rb     |  12 +
 openstacklib/Gemfile                               |   1 +
 openstacklib/metadata.json                         |   2 +-
 openstacklib/spec/acceptance/rabbitmq_spec.rb      |  13 +-
 openstacklib/spec/spec_helper_acceptance.rb        |  52 +--
 sahara/Gemfile                                     |   1 +
 sahara/metadata.json                               |   2 +-
 sahara/spec/spec_helper_acceptance.rb              |  58 ++--
 swift/Gemfile                                      |   1 +
 swift/manifests/init.pp                            |   8 +
 swift/spec/classes/swift_spec.rb                   |   9 +-
 swift/spec/spec_helper_acceptance.rb               |  55 +--
 tempest/Gemfile                                    |   1 +
 tempest/manifests/init.pp                          |  18 +-
 tempest/spec/classes/tempest_spec.rb               |   8 +
 tempest/spec/spec_helper_acceptance.rb             |  47 ++-
 tripleo/manifests/database/mysql.pp                | 367 ---------------------
 tripleo/manifests/loadbalancer.pp                  |  12 +-
 tripleo/manifests/packages.pp                      |  54 +++
 trove/Gemfile                                      |   1 +
 trove/spec/spec_helper_acceptance.rb               |  58 ++--
 vswitch/Gemfile                                    |   1 +
 vswitch/spec/spec_helper_acceptance.rb             |  47 ++-
 87 files changed, 1939 insertions(+), 1108 deletions(-)
 create mode 100644 keystone/lib/puppet/provider/keystone/util.rb
 create mode 100644 keystone/lib/puppet/provider/keystone_domain/openstack.rb
 create mode 100644 keystone/lib/puppet/type/keystone_domain.rb
 create mode 100644 keystone/spec/unit/provider/keystone/util_spec.rb
 create mode 100644 keystone/spec/unit/provider/keystone_domain/openstack_spec.rb
 create mode 100644 keystone/spec/unit/type/keystone_tenant_spec.rb
 delete mode 100644 tripleo/manifests/database/mysql.pp
 create mode 100644 tripleo/manifests/packages.pp

diff --git a/Puppetfile b/Puppetfile
index 3bc3a41..1b6a798 100644
--- a/Puppetfile
+++ b/Puppetfile
@@ -7,7 +7,7 @@ mod 'aviator',
   :git => 'https://github.com/aimonb/puppet_aviator.git'
 
 mod 'ceilometer',
-  :commit => 'b28de45c2bf497eb202728f9cd3ecbf4fa7ec1e6',
+  :commit => 'f17b3442402529281bdca9b2f70697e04bcfe216',
   :git => 'https://github.com/openstack/puppet-ceilometer.git'
 
 mod 'ceph',
@@ -19,7 +19,7 @@ mod 'certmonger',
   :git => 'https://github.com/rcritten/puppet-certmonger.git'
 
 mod 'cinder',
-  :commit => '318bf8cd862144f483e515fd8e85f1b54d717df3',
+  :commit => '15fd1a81b047342e71bfe939cf059eb4fd143e4d',
   :git => 'https://github.com/openstack/puppet-cinder.git'
 
 mod 'common',
@@ -43,7 +43,7 @@ mod 'galera',
   :git => 'https://github.com/redhat-openstack/puppet-galera.git'
 
 mod 'glance',
-  :commit => 'a56c42fe59a65da729e5497fd83b9c430a197714',
+  :commit => '0bb7577f7e4189495a148ca91f4f92c118e499e7',
   :git => 'https://github.com/openstack/puppet-glance.git'
 
 mod 'gluster',
@@ -51,7 +51,7 @@ mod 'gluster',
   :git => 'https://github.com/purpleidea/puppet-gluster.git'
 
 mod 'gnocchi',
-  :commit => '610680e4021de435b073269563a528896845ff7f',
+  :commit => '388ace2495661ff909b45c00471a121b5f2d18e3',
   :git => 'https://github.com/openstack/puppet-gnocchi.git'
 
 mod 'haproxy',
@@ -59,11 +59,11 @@ mod 'haproxy',
   :git => 'https://github.com/puppetlabs/puppetlabs-haproxy.git'
 
 mod 'heat',
-  :commit => 'acde13d1cb1dc5555a87042a45ac9c41c5157504',
+  :commit => '8e742b8d09e3bded06e9529ccd5e7f38e527ab5d',
   :git => 'https://github.com/openstack/puppet-heat.git'
 
 mod 'horizon',
-  :commit => '5883fea38719c4fd37fd1f39c3a2296f97d7d3fb',
+  :commit => '6e11fbf346560dab461964e53bcb1c817707abc5',
   :git => 'https://github.com/openstack/puppet-horizon.git'
 
 mod 'inifile',
@@ -75,7 +75,7 @@ mod 'ipa',
   :git => 'https://github.com/xbezdick/puppet-ipa-1.git'
 
 mod 'ironic',
-  :commit => 'bde2b7cab24ea9242c600f38b75e8d6084874537',
+  :commit => '886a9c0aa2c8ac6167e2d95a60c55bbd6977f82b',
   :git => 'https://github.com/openstack/puppet-ironic.git'
 
 mod 'keepalived',
@@ -83,11 +83,11 @@ mod 'keepalived',
   :git => 'https://github.com/Unyonsys/puppet-module-keepalived.git'
 
 mod 'keystone',
-  :commit => '920421a70d33e751c4ec1a665e74819d1c1354d0',
+  :commit => 'e0e87604b8199c0ac0d443999153f88fb7797a9c',
   :git => 'https://github.com/openstack/puppet-keystone.git'
 
 mod 'manila',
-  :commit => '74df3c01a8d2cb5375cddfba8a9a76e0351d15f4',
+  :commit => 'ff018bdef812bacfe512663c1cc0b92c7d1f26b2',
   :git => 'https://github.com/openstack/puppet-manila.git'
 
 mod 'memcached',
@@ -119,11 +119,11 @@ mod 'nagios',
   :git => 'https://github.com/gildub/puppet-nagios-openstack.git'
 
 mod 'neutron',
-  :commit => '32ca5213d5efe0042b9e7f7fe1f0b874a4107155',
+  :commit => '36b463c003f94fe23c3d9eff207bbf5005ee470c',
   :git => 'https://github.com/openstack/puppet-neutron.git'
 
 mod 'nova',
-  :commit => '2f45f87dfe0836bce15a804d2c03ce6a1a2ac2a0',
+  :commit => 'cb2d487fb9baf2c1902182973e29982b5389e769',
   :git => 'https://github.com/openstack/puppet-nova.git'
 
 mod 'nssdb',
@@ -135,11 +135,11 @@ mod 'ntp',
   :git => 'https://github.com/puppetlabs/puppetlabs-ntp'
 
 mod 'openstack_extras',
-  :commit => 'c531ea8bf39b739dd78c52bbc9878a114f87503f',
+  :commit => 'ab8ddaff93e06d7fdbfb2c61ffe9113562dd82ad',
   :git => 'https://github.com/openstack/puppet-openstack_extras.git'
 
 mod 'openstacklib',
-  :commit => '8458b4695495aa5509e29f0919feb01099b726d7',
+  :commit => '78ef674e0e6bc73b3a0af7833025dc9786eaeaeb',
   :git => 'https://github.com/openstack/puppet-openstacklib.git'
 
 mod 'pacemaker',
@@ -171,7 +171,7 @@ mod 'rsync',
   :git => 'https://github.com/puppetlabs/puppetlabs-rsync.git'
 
 mod 'sahara',
-  :commit => '20dae0017164db93e0663b8a8e7739796b27e2a2',
+  :commit => '56d9a841bff7389d1128d40dad4a319988d547f1',
   :git => 'https://github.com/openstack/puppet-sahara.git'
 
 mod 'snmp',
@@ -191,7 +191,7 @@ mod 'stdlib',
   :git => 'https://github.com/puppetlabs/puppetlabs-stdlib.git'
 
 mod 'swift',
-  :commit => '95b4d9d6af62310cdefa37d6ed823101cfcdebee',
+  :commit => '275fb9b111bbb30148e762afc0798aa891091cf2',
   :git => 'https://github.com/openstack/puppet-swift.git'
 
 mod 'sysctl',
@@ -199,7 +199,7 @@ mod 'sysctl',
   :git => 'https://github.com/puppetlabs/puppetlabs-sysctl.git'
 
 mod 'tempest',
-  :commit => 'ee558f07c6d7a91c313d36c927cdd764bf633f87',
+  :commit => 'ab9601ff339f6acb40901291133c03cf1b45d5ee',
   :git => 'https://github.com/openstack/puppet-tempest.git'
 
 mod 'timezone',
@@ -207,11 +207,11 @@ mod 'timezone',
   :git => 'https://github.com/saz/puppet-timezone.git'
 
 mod 'tripleo',
-  :commit => 'd8b609878f3fe90a417faae251925cf5a8e54a23',
+  :commit => '717eb39ca7295e128ab99694ea3a7ae658b9528f',
   :git => 'https://github.com/openstack/puppet-tripleo.git'
 
 mod 'trove',
-  :commit => 'b04dd42edfb4604bc1c3569bbc0b77c574ae1f08',
+  :commit => '2636a384f67c2ac1513ac709f3ae4525668ccb62',
   :git => 'https://github.com/openstack/puppet-trove'
 
 mod 'tuskar',
@@ -227,7 +227,7 @@ mod 'vlan',
   :git => 'https://github.com/derekhiggins/puppet-vlan.git'
 
 mod 'vswitch',
-  :commit => '45495bb44f99ac3d999daad2734c2b9ddf8953d2',
+  :commit => 'e73073a120d833958d22925a1badbc1ccdc0f15a',
   :git => 'https://github.com/openstack/puppet-vswitch.git'
 
 mod 'xinetd',
diff --git a/ceilometer/Gemfile b/ceilometer/Gemfile
index 3c0b875..9ea2113 100644
--- a/ceilometer/Gemfile
+++ b/ceilometer/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/ceilometer/spec/spec_helper_acceptance.rb b/ceilometer/spec/spec_helper_acceptance.rb
index 2a02a6d..429e807 100644
--- a/ceilometer/spec/spec_helper_acceptance.rb
+++ b/ceilometer/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,28 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-mongodb'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'ceilometer')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/cinder/Gemfile b/cinder/Gemfile
index f1393a8..77f6ac8 100644
--- a/cinder/Gemfile
+++ b/cinder/Gemfile
@@ -16,6 +16,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/cinder/manifests/init.pp b/cinder/manifests/init.pp
index 43af01f..7e11e33 100644
--- a/cinder/manifests/init.pp
+++ b/cinder/manifests/init.pp
@@ -76,8 +76,9 @@
 #   Defaults to 'guest'
 #
 # [*rabbit_password*]
-#   (Optional) Password to connect to the rabbit_server.
-#   Defaults to empty.
+#   (Required) Password to connect to the rabbit_server.
+#   Defaults to empty. Required if using the Rabbit (kombu)
+#   backend.
 #
 # [*rabbit_virtual_host*]
 #   (Optional) Virtual_host to use.
diff --git a/cinder/metadata.json b/cinder/metadata.json
index 889e172..3b718d8 100644
--- a/cinder/metadata.json
+++ b/cinder/metadata.json
@@ -34,7 +34,7 @@
     { "name": "dprince/qpid", "version_requirement": ">=1.0.0 <2.0.0" },
     { "name": "puppetlabs/inifile", "version_requirement": ">=1.0.0 <2.0.0" },
     { "name": "stackforge/keystone", "version_requirement": ">=5.0.0 <6.0.0" },
-    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <4.0.0" },
+    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <6.0.0" },
     { "name": "puppetlabs/stdlib", "version_requirement": ">=4.0.0 <5.0.0" },
     { "name": "stackforge/openstacklib", "version_requirement": ">=5.0.0 <6.0.0" }
   ]
diff --git a/cinder/spec/spec_helper_acceptance.rb b/cinder/spec/spec_helper_acceptance.rb
index 35d40dc..429e807 100644
--- a/cinder/spec/spec_helper_acceptance.rb
+++ b/cinder/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,29 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'cinder')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/glance/Gemfile b/glance/Gemfile
index 3c0b875..9ea2113 100644
--- a/glance/Gemfile
+++ b/glance/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/glance/manifests/backend/cinder.pp b/glance/manifests/backend/cinder.pp
index 75507d7..7ba741b 100644
--- a/glance/manifests/backend/cinder.pp
+++ b/glance/manifests/backend/cinder.pp
@@ -68,32 +68,32 @@ class glance::backend::cinder(
   }
 
   glance_api_config {
-    'DEFAULT/cinder_api_insecure':         value => $cinder_api_insecure;
-    'DEFAULT/cinder_catalog_info':         value => $cinder_catalog_info;
-    'DEFAULT/cinder_http_retries':         value => $cinder_http_retries;
-    'glance_store/default_store':          value => 'cinder';
+    'glance_store/cinder_api_insecure': value => $cinder_api_insecure;
+    'glance_store/cinder_catalog_info': value => $cinder_catalog_info;
+    'glance_store/cinder_http_retries': value => $cinder_http_retries;
+    'glance_store/default_store':       value => 'cinder';
   }
 
   glance_cache_config {
-    'DEFAULT/cinder_api_insecure':         value => $cinder_api_insecure;
-    'DEFAULT/cinder_catalog_info':         value => $cinder_catalog_info;
-    'DEFAULT/cinder_http_retries':         value => $cinder_http_retries;
+    'glance_store/cinder_api_insecure': value => $cinder_api_insecure;
+    'glance_store/cinder_catalog_info': value => $cinder_catalog_info;
+    'glance_store/cinder_http_retries': value => $cinder_http_retries;
   }
 
   if $cinder_endpoint_template {
-    glance_api_config { 'DEFAULT/cinder_endpoint_template':   value => $cinder_endpoint_template; }
-    glance_cache_config { 'DEFAULT/cinder_endpoint_template': value => $cinder_endpoint_template; }
+    glance_api_config { 'glance_store/cinder_endpoint_template':   value => $cinder_endpoint_template; }
+    glance_cache_config { 'glance_store/cinder_endpoint_template': value => $cinder_endpoint_template; }
   } else {
-    glance_api_config { 'DEFAULT/cinder_endpoint_template':   ensure => absent; }
-    glance_cache_config { 'DEFAULT/cinder_endpoint_template': ensure => absent; }
+    glance_api_config { 'glance_store/cinder_endpoint_template':   ensure => absent; }
+    glance_cache_config { 'glance_store/cinder_endpoint_template': ensure => absent; }
   }
 
   if $cinder_ca_certificates_file {
-    glance_api_config { 'DEFAULT/cinder_ca_certificates_file':   value => $cinder_ca_certificates_file; }
-    glance_cache_config { 'DEFAULT/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; }
+    glance_api_config { 'glance_store/cinder_ca_certificates_file':   value => $cinder_ca_certificates_file; }
+    glance_cache_config { 'glance_store/cinder_ca_certificates_file': value => $cinder_ca_certificates_file; }
   } else {
-    glance_api_config { 'DEFAULT/cinder_ca_certificates_file':   ensure => absent; }
-    glance_cache_config { 'DEFAULT/cinder_ca_certificates_file': ensure => absent; }
+    glance_api_config { 'glance_store/cinder_ca_certificates_file':   ensure => absent; }
+    glance_cache_config { 'glance_store/cinder_ca_certificates_file': ensure => absent; }
   }
 
 }
diff --git a/glance/manifests/backend/swift.pp b/glance/manifests/backend/swift.pp
index 0a24359..6065acf 100644
--- a/glance/manifests/backend/swift.pp
+++ b/glance/manifests/backend/swift.pp
@@ -45,11 +45,11 @@ class glance::backend::swift(
     'glance_store/swift_store_user':         value => $swift_store_user;
     'glance_store/swift_store_key':          value => $swift_store_key;
     'glance_store/swift_store_auth_address': value => $swift_store_auth_address;
-    'DEFAULT/swift_store_container':         value => $swift_store_container;
-    'DEFAULT/swift_store_auth_version':      value => $swift_store_auth_version;
-    'DEFAULT/swift_store_create_container_on_put':
+    'glance_store/swift_store_container':    value => $swift_store_container;
+    'glance_store/swift_store_auth_version': value => $swift_store_auth_version;
+    'glance_store/swift_store_create_container_on_put':
       value => $swift_store_create_container_on_put;
-    'DEFAULT/swift_store_large_object_size':
+    'glance_store/swift_store_large_object_size':
       value => $swift_store_large_object_size;
     'glance_store/swift_store_endpoint_type':
       value => $swift_store_endpoint_type;
@@ -59,11 +59,11 @@ class glance::backend::swift(
     'glance_store/swift_store_user':         value => $swift_store_user;
     'glance_store/swift_store_key':          value => $swift_store_key;
     'glance_store/swift_store_auth_address': value => $swift_store_auth_address;
-    'DEFAULT/swift_store_container':         value => $swift_store_container;
-    'DEFAULT/swift_store_auth_version':      value => $swift_store_auth_version;
-    'DEFAULT/swift_store_create_container_on_put':
+    'glance_store/swift_store_container':    value => $swift_store_container;
+    'glance_store/swift_store_auth_version': value => $swift_store_auth_version;
+    'glance_store/swift_store_create_container_on_put':
       value => $swift_store_create_container_on_put;
-    'DEFAULT/swift_store_large_object_size':
+    'glance_store/swift_store_large_object_size':
       value => $swift_store_large_object_size;
   }
 
diff --git a/glance/manifests/backend/vsphere.pp b/glance/manifests/backend/vsphere.pp
index 133b098..c5ad827 100644
--- a/glance/manifests/backend/vsphere.pp
+++ b/glance/manifests/backend/vsphere.pp
@@ -69,15 +69,15 @@ class glance::backend::vsphere(
   $vcenter_api_retry_count = '10',
 ) {
   glance_api_config {
-    'DEFAULT/default_store': value             => 'vsphere';
-    'DEFAULT/vmware_api_insecure': value       => $vcenter_api_insecure;
-    'DEFAULT/vmware_server_host': value        => $vcenter_host;
-    'DEFAULT/vmware_server_username': value    => $vcenter_user;
-    'DEFAULT/vmware_server_password': value    => $vcenter_password;
-    'DEFAULT/vmware_datastore_name': value     => $vcenter_datastore;
-    'DEFAULT/vmware_store_image_dir': value    => $vcenter_image_dir;
-    'DEFAULT/vmware_task_poll_interval': value => $vcenter_task_poll_interval;
-    'DEFAULT/vmware_api_retry_count': value    => $vcenter_api_retry_count;
-    'DEFAULT/vmware_datacenter_path': value    => $vcenter_datacenter;
+    'glance_store/default_store': value             => 'vsphere';
+    'glance_store/vmware_api_insecure': value       => $vcenter_api_insecure;
+    'glance_store/vmware_server_host': value        => $vcenter_host;
+    'glance_store/vmware_server_username': value    => $vcenter_user;
+    'glance_store/vmware_server_password': value    => $vcenter_password;
+    'glance_store/vmware_datastore_name': value     => $vcenter_datastore;
+    'glance_store/vmware_store_image_dir': value    => $vcenter_image_dir;
+    'glance_store/vmware_task_poll_interval': value => $vcenter_task_poll_interval;
+    'glance_store/vmware_api_retry_count': value    => $vcenter_api_retry_count;
+    'glance_store/vmware_datacenter_path': value    => $vcenter_datacenter;
   }
 }
diff --git a/glance/spec/classes/glance_backend_cinder_spec.rb b/glance/spec/classes/glance_backend_cinder_spec.rb
index f961dfa..99c6268 100644
--- a/glance/spec/classes/glance_backend_cinder_spec.rb
+++ b/glance/spec/classes/glance_backend_cinder_spec.rb
@@ -32,18 +32,18 @@ describe 'glance::backend::cinder' do
 
       it 'configures glance-api.conf' do
         is_expected.to contain_glance_api_config('glance_store/default_store').with_value('cinder')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_api_insecure').with_value(false)
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_catalog_info').with_value('volume:cinder:publicURL')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_http_retries').with_value('3')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_ca_certificates_file').with(:ensure => 'absent')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_endpoint_template').with(:ensure => 'absent')
+        is_expected.to contain_glance_api_config('glance_store/cinder_api_insecure').with_value(false)
+        is_expected.to contain_glance_api_config('glance_store/cinder_catalog_info').with_value('volume:cinder:publicURL')
+        is_expected.to contain_glance_api_config('glance_store/cinder_http_retries').with_value('3')
+        is_expected.to contain_glance_api_config('glance_store/cinder_ca_certificates_file').with(:ensure => 'absent')
+        is_expected.to contain_glance_api_config('glance_store/cinder_endpoint_template').with(:ensure => 'absent')
       end
       it 'configures glance-cache.conf' do
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_api_insecure').with_value(false)
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_catalog_info').with_value('volume:cinder:publicURL')
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_http_retries').with_value('3')
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_ca_certificates_file').with(:ensure => 'absent')
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_endpoint_template').with(:ensure => 'absent')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_api_insecure').with_value(false)
+        is_expected.to contain_glance_cache_config('glance_store/cinder_catalog_info').with_value('volume:cinder:publicURL')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_http_retries').with_value('3')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_ca_certificates_file').with(:ensure => 'absent')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_endpoint_template').with(:ensure => 'absent')
       end
     end
 
@@ -59,18 +59,18 @@ describe 'glance::backend::cinder' do
       end
       it 'configures glance-api.conf' do
         is_expected.to contain_glance_api_config('glance_store/default_store').with_value('cinder')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_api_insecure').with_value(true)
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_ca_certificates_file').with_value('/etc/ssh/ca.crt')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_catalog_info').with_value('volume:cinder:internalURL')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_endpoint_template').with_value('http://srv-foo:8776/v1/%(project_id)s')
-        is_expected.to contain_glance_api_config('DEFAULT/cinder_http_retries').with_value('10')
+        is_expected.to contain_glance_api_config('glance_store/cinder_api_insecure').with_value(true)
+        is_expected.to contain_glance_api_config('glance_store/cinder_ca_certificates_file').with_value('/etc/ssh/ca.crt')
+        is_expected.to contain_glance_api_config('glance_store/cinder_catalog_info').with_value('volume:cinder:internalURL')
+        is_expected.to contain_glance_api_config('glance_store/cinder_endpoint_template').with_value('http://srv-foo:8776/v1/%(project_id)s')
+        is_expected.to contain_glance_api_config('glance_store/cinder_http_retries').with_value('10')
       end
       it 'configures glance-cache.conf' do
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_api_insecure').with_value(true)
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_ca_certificates_file').with_value('/etc/ssh/ca.crt')
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_catalog_info').with_value('volume:cinder:internalURL')
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_endpoint_template').with_value('http://srv-foo:8776/v1/%(project_id)s')
-        is_expected.to contain_glance_cache_config('DEFAULT/cinder_http_retries').with_value('10')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_api_insecure').with_value(true)
+        is_expected.to contain_glance_cache_config('glance_store/cinder_ca_certificates_file').with_value('/etc/ssh/ca.crt')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_catalog_info').with_value('volume:cinder:internalURL')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_endpoint_template').with_value('http://srv-foo:8776/v1/%(project_id)s')
+        is_expected.to contain_glance_cache_config('glance_store/cinder_http_retries').with_value('10')
       end
     end
 
diff --git a/glance/spec/classes/glance_backend_swift_spec.rb b/glance/spec/classes/glance_backend_swift_spec.rb
index d9e3b22..65d09dd 100644
--- a/glance/spec/classes/glance_backend_swift_spec.rb
+++ b/glance/spec/classes/glance_backend_swift_spec.rb
@@ -24,22 +24,22 @@ describe 'glance::backend::swift' do
       is_expected.to contain_glance_api_config('glance_store/default_store').with_value('swift')
       is_expected.to contain_glance_api_config('glance_store/swift_store_key').with_value('key')
       is_expected.to contain_glance_api_config('glance_store/swift_store_user').with_value('user')
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_auth_version').with_value('2')
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_large_object_size').with_value('5120')
+      is_expected.to contain_glance_api_config('glance_store/swift_store_auth_version').with_value('2')
+      is_expected.to contain_glance_api_config('glance_store/swift_store_large_object_size').with_value('5120')
       is_expected.to contain_glance_api_config('glance_store/swift_store_auth_address').with_value('127.0.0.1:5000/v2.0/')
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_container').with_value('glance')
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_create_container_on_put').with_value(false)
+      is_expected.to contain_glance_api_config('glance_store/swift_store_container').with_value('glance')
+      is_expected.to contain_glance_api_config('glance_store/swift_store_create_container_on_put').with_value(false)
       is_expected.to contain_glance_api_config('glance_store/swift_store_endpoint_type').with_value('internalURL')
     end
 
     it 'configures glance-cache.conf' do
       is_expected.to contain_glance_cache_config('glance_store/swift_store_key').with_value('key')
       is_expected.to contain_glance_cache_config('glance_store/swift_store_user').with_value('user')
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_auth_version').with_value('2')
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_large_object_size').with_value('5120')
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_auth_version').with_value('2')
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_large_object_size').with_value('5120')
       is_expected.to contain_glance_cache_config('glance_store/swift_store_auth_address').with_value('127.0.0.1:5000/v2.0/')
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_container').with_value('glance')
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_create_container_on_put').with_value(false)
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_container').with_value('glance')
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_create_container_on_put').with_value(false)
     end
   end
 
@@ -58,19 +58,19 @@ describe 'glance::backend::swift' do
     end
 
     it 'configures glance-api.conf' do
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_container').with_value('swift')
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_create_container_on_put').with_value(true)
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_auth_version').with_value('1')
-      is_expected.to contain_glance_api_config('DEFAULT/swift_store_large_object_size').with_value('100')
+      is_expected.to contain_glance_api_config('glance_store/swift_store_container').with_value('swift')
+      is_expected.to contain_glance_api_config('glance_store/swift_store_create_container_on_put').with_value(true)
+      is_expected.to contain_glance_api_config('glance_store/swift_store_auth_version').with_value('1')
+      is_expected.to contain_glance_api_config('glance_store/swift_store_large_object_size').with_value('100')
       is_expected.to contain_glance_api_config('glance_store/swift_store_auth_address').with_value('127.0.0.2:8080/v1.0/')
       is_expected.to contain_glance_api_config('glance_store/swift_store_endpoint_type').with_value('publicURL')
     end
 
     it 'configures glance-cache.conf' do
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_container').with_value('swift')
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_create_container_on_put').with_value(true)
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_auth_version').with_value('1')
-      is_expected.to contain_glance_cache_config('DEFAULT/swift_store_large_object_size').with_value('100')
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_container').with_value('swift')
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_create_container_on_put').with_value(true)
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_auth_version').with_value('1')
+      is_expected.to contain_glance_cache_config('glance_store/swift_store_large_object_size').with_value('100')
       is_expected.to contain_glance_cache_config('glance_store/swift_store_auth_address').with_value('127.0.0.2:8080/v1.0/')
     end
   end
diff --git a/glance/spec/classes/glance_backend_vsphere_spec.rb b/glance/spec/classes/glance_backend_vsphere_spec.rb
index 43ab90c..33a5fb8 100644
--- a/glance/spec/classes/glance_backend_vsphere_spec.rb
+++ b/glance/spec/classes/glance_backend_vsphere_spec.rb
@@ -40,16 +40,16 @@ describe 'glance::backend::vsphere' do
         }
       end
       it 'configures glance-api.conf' do
-        is_expected.to contain_glance_api_config('DEFAULT/default_store').with_value('vsphere')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_api_insecure').with_value('False')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_server_host').with_value('10.0.0.1')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_server_username').with_value('root')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_server_password').with_value('123456')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_datastore_name').with_value('Datastore')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_store_image_dir').with_value('/openstack_glance')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_task_poll_interval').with_value('5')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_api_retry_count').with_value('10')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_datacenter_path').with_value('Datacenter')
+        is_expected.to contain_glance_api_config('glance_store/default_store').with_value('vsphere')
+        is_expected.to contain_glance_api_config('glance_store/vmware_api_insecure').with_value('False')
+        is_expected.to contain_glance_api_config('glance_store/vmware_server_host').with_value('10.0.0.1')
+        is_expected.to contain_glance_api_config('glance_store/vmware_server_username').with_value('root')
+        is_expected.to contain_glance_api_config('glance_store/vmware_server_password').with_value('123456')
+        is_expected.to contain_glance_api_config('glance_store/vmware_datastore_name').with_value('Datastore')
+        is_expected.to contain_glance_api_config('glance_store/vmware_store_image_dir').with_value('/openstack_glance')
+        is_expected.to contain_glance_api_config('glance_store/vmware_task_poll_interval').with_value('5')
+        is_expected.to contain_glance_api_config('glance_store/vmware_api_retry_count').with_value('10')
+        is_expected.to contain_glance_api_config('glance_store/vmware_datacenter_path').with_value('Datacenter')
       end
     end
 
@@ -68,9 +68,9 @@ describe 'glance::backend::vsphere' do
         }
       end
       it 'configures glance-api.conf' do
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_api_insecure').with_value('True')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_task_poll_interval').with_value('6')
-        is_expected.to contain_glance_api_config('DEFAULT/vmware_api_retry_count').with_value('11')
+        is_expected.to contain_glance_api_config('glance_store/vmware_api_insecure').with_value('True')
+        is_expected.to contain_glance_api_config('glance_store/vmware_task_poll_interval').with_value('6')
+        is_expected.to contain_glance_api_config('glance_store/vmware_api_retry_count').with_value('11')
       end
     end
 
diff --git a/glance/spec/spec_helper_acceptance.rb b/glance/spec/spec_helper_acceptance.rb
index 7f12a15..e29c01c 100644
--- a/glance/spec/spec_helper_acceptance.rb
+++ b/glance/spec/spec_helper_acceptance.rb
@@ -1,47 +1,56 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
 
   # Configure all nodes in nodeset
   c.before :suite do
-    # Install module
+    # Install module and dependencies
     hosts.each do |host|
 
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      on host, puppet('module','install', '--force', 'puppetlabs-mysql', '--version', '3.2.0'), { :acceptable_exit_codes => [0,1] }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => [0,1] }
-      on host, puppet('module','install','puppetlabs-apt', '--version', '1.8.0'), { :acceptable_exit_codes => [0,1] }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => [0,1] }
-      on host, puppet('module','install','puppetlabs-stdlib'), { :acceptable_exit_codes => [0,1] }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => [0,1] }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'glance')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => [0,1] }
+      on host, puppet('module','list'), { :acceptable_exit_codes => [0] }
     end
   end
 end
diff --git a/gnocchi/Gemfile b/gnocchi/Gemfile
index 3c0b875..9ea2113 100644
--- a/gnocchi/Gemfile
+++ b/gnocchi/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/gnocchi/spec/spec_helper_acceptance.rb b/gnocchi/spec/spec_helper_acceptance.rb
index a5622d3..429e807 100644
--- a/gnocchi/spec/spec_helper_acceptance.rb
+++ b/gnocchi/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,31 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','duritong/sysctl'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-ceilometer /etc/puppet/modules/ceilometer')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'nova')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/heat/Gemfile b/heat/Gemfile
index 3c0b875..9ea2113 100644
--- a/heat/Gemfile
+++ b/heat/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/heat/spec/spec_helper_acceptance.rb b/heat/spec/spec_helper_acceptance.rb
index f1cdaf9..429e807 100644
--- a/heat/spec/spec_helper_acceptance.rb
+++ b/heat/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,29 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'heat')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/horizon/Gemfile b/horizon/Gemfile
index c220782..6bd2852 100644
--- a/horizon/Gemfile
+++ b/horizon/Gemfile
@@ -18,6 +18,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/horizon/spec/spec_helper_acceptance.rb b/horizon/spec/spec_helper_acceptance.rb
index c7123c3..429e807 100644
--- a/horizon/spec/spec_helper_acceptance.rb
+++ b/horizon/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,23 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-stdlib'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-apache'), { :acceptable_exit_codes => 0 }
-      # 2.0.0 make the catalog fail
-      # "Unable to determine lsbdistid, is lsb-release installed?"
-      # while lsb-release is installed.
-      on host, puppet('module','install','puppetlabs-apt','--version', '1.8.0'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','saz/memcached'), { :acceptable_exit_codes => 0 }
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'horizon')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/ironic/Gemfile b/ironic/Gemfile
index 212eec8..e284b8b 100644
--- a/ironic/Gemfile
+++ b/ironic/Gemfile
@@ -16,6 +16,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/ironic/manifests/keystone/auth.pp b/ironic/manifests/keystone/auth.pp
index 1afc5c9..b6519fa 100644
--- a/ironic/manifests/keystone/auth.pp
+++ b/ironic/manifests/keystone/auth.pp
@@ -51,6 +51,10 @@
 # [*service_type*]
 #   Type of service. Defaults to 'baremetal'.
 #
+# [*service_description*]
+#   (Optional) Description for keystone service.
+#   Defaults to 'Ironic Bare Metal Provisioning Service'.
+#
 # [*region*]
 #   Region for endpoint. Defaults to 'RegionOne'.
 #
@@ -119,6 +123,7 @@ class ironic::keystone::auth (
   $configure_user_role = true,
   $service_name        = undef,
   $service_type        = 'baremetal',
+  $service_description = 'Ironic Bare Metal Provisioning Service',
   $public_protocol     = 'http',
   $region              = 'RegionOne',
   $public_url          = 'http://127.0.0.1:6385',
@@ -196,7 +201,7 @@ class ironic::keystone::auth (
     configure_endpoint  => $configure_endpoint,
     service_name        => $real_service_name,
     service_type        => $service_type,
-    service_description => 'Ironic Networking Service',
+    service_description => $service_description,
     region              => $region,
     password            => $password,
     email               => $email,
diff --git a/ironic/spec/classes/ironic_keystone_auth_spec.rb b/ironic/spec/classes/ironic_keystone_auth_spec.rb
index 4acb5c3..7d4bf57 100644
--- a/ironic/spec/classes/ironic_keystone_auth_spec.rb
+++ b/ironic/spec/classes/ironic_keystone_auth_spec.rb
@@ -46,7 +46,7 @@ describe 'ironic::keystone::auth' do
     it { is_expected.to contain_keystone_service('ironic').with(
       :ensure      => 'present',
       :type        => 'baremetal',
-      :description => 'Ironic Networking Service'
+      :description => 'Ironic Bare Metal Provisioning Service'
     ) }
 
     it { is_expected.to contain_keystone_endpoint('RegionOne/ironic').with(
@@ -147,7 +147,7 @@ describe 'ironic::keystone::auth' do
     it { is_expected.to contain_keystone_service('ironic').with(
       :ensure      => 'present',
       :type        => 'baremetal',
-      :description => 'Ironic Networking Service'
+      :description => 'Ironic Bare Metal Provisioning Service'
     ) }
 
   end
@@ -169,7 +169,7 @@ describe 'ironic::keystone::auth' do
     it { is_expected.to contain_keystone_service('ironic').with(
       :ensure      => 'present',
       :type        => 'baremetal',
-      :description => 'Ironic Networking Service'
+      :description => 'Ironic Bare Metal Provisioning Service'
     ) }
 
   end
diff --git a/ironic/spec/spec_helper_acceptance.rb b/ironic/spec/spec_helper_acceptance.rb
index eb0b6fd..429e807 100644
--- a/ironic/spec/spec_helper_acceptance.rb
+++ b/ironic/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,29 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'ironic')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/keystone/Gemfile b/keystone/Gemfile
index 4d9cab8..23c74a8 100644
--- a/keystone/Gemfile
+++ b/keystone/Gemfile
@@ -19,6 +19,7 @@ group :development, :test do
   gem 'json'
   gem 'webmock'
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
 end
 
 if puppetversion = ENV['PUPPET_GEM_VERSION']
diff --git a/keystone/files/httpd/keystone.py b/keystone/files/httpd/keystone.py
index 81c5348..a893d26 100644
--- a/keystone/files/httpd/keystone.py
+++ b/keystone/files/httpd/keystone.py
@@ -13,7 +13,8 @@
 #    under the License.
 
 #
-# This file was copied from https://github.com/openstack/keystone/raw/a4f29db2b8cde1b445b86218fb5543295da2092c/httpd/keystone.py
+# This file was copied from
+# raw.githubusercontent.com/openstack/keystone/a4f29db/httpd/keystone.py
 # It's only required for platforms on which it is not packaged yet.
 # It should be removed when available everywhere in a package.
 #
diff --git a/keystone/lib/puppet/provider/keystone.rb b/keystone/lib/puppet/provider/keystone.rb
index 4e7815a..849868b 100644
--- a/keystone/lib/puppet/provider/keystone.rb
+++ b/keystone/lib/puppet/provider/keystone.rb
@@ -2,6 +2,7 @@ require 'puppet/util/inifile'
 require 'puppet/provider/openstack'
 require 'puppet/provider/openstack/auth'
 require 'puppet/provider/openstack/credentials'
+require 'puppet/provider/keystone/util'
 
 class Puppet::Provider::Keystone < Puppet::Provider::Openstack
 
@@ -30,6 +31,31 @@ class Puppet::Provider::Keystone < Puppet::Provider::Openstack
     @admin_endpoint ||= get_admin_endpoint
   end
 
+  # use the domain in this order:
+  # 1 - the domain name specified in the resource definition - resource[:domain]
+  # 2 - the domain name part of the resource name/title e.g. user_name::user_domain
+  #     if passed in by name_and_domain above
+  # 3 - use the specified default_domain_name
+  # 4 - lookup the default domain
+  # 5 - use 'Default' - the "default" default domain if no other one is configured
+  # Usage: name_and_domain(resource[:name], resource[:domain], default_domain_name)
+  def self.name_and_domain(namedomstr, domain_from_resource=nil, default_domain_name=nil)
+    name, domain = Util.split_domain(namedomstr)
+    ret = [name]
+    if domain_from_resource
+      ret << domain_from_resource
+    elsif domain
+      ret << domain
+    elsif default_domain_name
+      ret << default_domain_name
+    elsif default_domain
+      ret << default_domain
+    else
+      ret << 'Default'
+    end
+    ret
+  end
+
   def self.admin_token
     @admin_token ||= get_admin_token
   end
@@ -80,8 +106,8 @@ class Puppet::Provider::Keystone < Puppet::Provider::Openstack
 
   def self.request(service, action, properties=nil)
     super
-    rescue Puppet::Error::OpenstackAuthInputError => error
-      request_by_service_token(service, action, error, properties)
+  rescue Puppet::Error::OpenstackAuthInputError => error
+    request_by_service_token(service, action, error, properties)
   end
 
   def self.request_by_service_token(service, action, error, properties=nil)
@@ -96,6 +122,31 @@ class Puppet::Provider::Keystone < Puppet::Provider::Openstack
     INI_FILENAME
   end
 
+  def self.default_domain
+    domain_hash[default_domain_id]
+  end
+
+  def self.domain_hash
+    return @domain_hash if @domain_hash
+    list = request('domain', 'list')
+    @domain_hash = Hash[list.collect{|domain| [domain[:id], domain[:name]]}]
+    @domain_hash
+  end
+
+  def self.domain_name_from_id(id)
+    domain_hash[id]
+  end
+
+  def self.default_domain_id
+    return @default_domain_id if @default_domain_id
+    if keystone_file and keystone_file['identity'] and keystone_file['identity']['default_domain_id']
+      @default_domain_id = "#{keystone_file['identity']['default_domain_id'].strip}"
+    else
+      @default_domain_id = 'default'
+    end
+    @default_domain_id
+  end
+
   def self.keystone_file
     return @keystone_file if @keystone_file
     if File.exists?(ini_filename)
diff --git a/keystone/lib/puppet/provider/keystone/util.rb b/keystone/lib/puppet/provider/keystone/util.rb
new file mode 100644
index 0000000..7eadf98
--- /dev/null
+++ b/keystone/lib/puppet/provider/keystone/util.rb
@@ -0,0 +1,25 @@
+module Util
+  # Splits the rightmost part of a string using '::' as delimiter
+  # Returns an array of both parts or nil if either is empty.
+  # An empty rightmost part is ignored and converted as 'string::' => 'string'
+  #
+  # Examples:
+  # "foo"             -> ["foo", nil]
+  # "foo::"           -> ["foo", nil]
+  # "foo::bar"        -> ["foo", "bar"]
+  # "foo::bar::"      -> ["foo", "bar"]
+  # "::foo"           -> [nil, "foo"]
+  # "::foo::"         -> [nil, "foo"]
+  # "foo::bar::baz"   -> ["foo::bar", "baz"]
+  # "foo::bar::baz::" -> ["foo::bar", "baz"]
+  #
+  def self.split_domain(str)
+    left, right = nil, nil
+    unless str.nil?
+      left, delimiter, right = str.gsub(/::$/, '').rpartition('::')
+      left, right = right, nil if delimiter.empty?
+      left = nil if left.empty?
+    end
+    return [left, right]
+  end
+end
diff --git a/keystone/lib/puppet/provider/keystone_domain/openstack.rb b/keystone/lib/puppet/provider/keystone_domain/openstack.rb
new file mode 100644
index 0000000..14a8f69
--- /dev/null
+++ b/keystone/lib/puppet/provider/keystone_domain/openstack.rb
@@ -0,0 +1,143 @@
+require 'puppet/provider/keystone'
+require 'puppet/util/inifile'
+
+Puppet::Type.type(:keystone_domain).provide(
+  :openstack,
+  :parent => Puppet::Provider::Keystone
+) do
+
+  desc 'Provider that manages keystone domains'
+
+  @credentials = Puppet::Provider::Openstack::CredentialsV3.new
+
+  def initialize(value={})
+    super(value)
+    @property_flush = {}
+  end
+
+  def create
+    properties = [resource[:name]]
+    if resource[:enabled] == :true
+      properties << '--enable'
+    elsif resource[:enabled] == :false
+      properties << '--disable'
+    end
+    if resource[:description]
+      properties << '--description'
+      properties << resource[:description]
+    end
+    @property_hash = self.class.request('domain', 'create', properties)
+    @property_hash[:is_default] = sym_to_bool(resource[:is_default])
+    @property_hash[:ensure] = :present
+    ensure_default_domain(true)
+  end
+
+  def exists?
+    @property_hash[:ensure] == :present
+  end
+
+  def destroy
+    # have to disable first - Keystone does not allow you to delete an
+    # enabled domain
+    self.class.request('domain', 'set', [resource[:name], '--disable'])
+    self.class.request('domain', 'delete', resource[:name])
+    @property_hash[:ensure] == :absent
+    ensure_default_domain(false, true)
+    @property_hash.clear
+  end
+
+  def enabled=(value)
+    @property_flush[:enabled] = value
+  end
+
+  def enabled
+    bool_to_sym(@property_hash[:enabled])
+  end
+
+  def description=(value)
+    @property_flush[:description] = value
+  end
+
+  def description
+    @property_hash[:description]
+  end
+
+  def id
+    @property_hash[:id]
+  end
+
+  def is_default
+    bool_to_sym(@property_hash[:is_default])
+  end
+
+  def is_default=(value)
+    @property_flush[:is_default] = value
+  end
+
+  def ensure_default_domain(create, destroy=false, value=nil)
+    if !self.class.keystone_file
+      return
+    end
+    changed = false
+    curid = self.class.default_domain_id
+    newid = id
+    default = (is_default == :true)
+    if (default && create) || (!default && (value == :true))
+      # new default domain, or making existing domain the default domain
+      if curid != newid
+        self.class.keystone_file['identity']['default_domain_id'] = newid
+        changed = true
+      end
+    elsif (default && destroy) || (default && (value == :false))
+      # removing default domain, or making this domain not the default
+      if curid == newid
+        # can't delete from inifile, so just reset to default 'default'
+        self.class.keystone_file['identity']['default_domain_id'] = 'default'
+        changed = true
+        newid = 'default'
+      end
+    end
+    if changed
+      self.class.keystone_file.store
+      debug("The default_domain_id was changed from #{curid} to #{newid}")
+    end
+  end
+
+  def self.instances
+    request('domain', 'list').collect do |domain|
+      new(
+        :name        => domain[:name],
+        :ensure      => :present,
+        :enabled     => domain[:enabled].downcase.chomp == 'true' ? true : false,
+        :description => domain[:description],
+        :id          => domain[:id],
+        :is_default  => domain[:id] == default_domain_id
+      )
+    end
+  end
+
+  def self.prefetch(resources)
+    domains = instances
+    resources.keys.each do |name|
+      if provider = domains.find{ |domain| domain.name == name }
+        resources[name].provider = provider
+      end
+    end
+  end
+
+  def flush
+    options = []
+    if @property_flush && !@property_flush.empty?
+      options << '--enable' if @property_flush[:enabled] == :true
+      options << '--disable' if @property_flush[:enabled] == :false
+      if @property_flush[:description]
+        options << '--description' << resource[:description]
+      end
+      self.class.request('domain', 'set', [resource[:name]] + options) unless options.empty?
+      if @property_flush[:is_default]
+        ensure_default_domain(false, false, @property_flush[:is_default])
+      end
+      @property_flush.clear
+    end
+  end
+end
diff --git a/keystone/lib/puppet/provider/keystone_role/openstack.rb b/keystone/lib/puppet/provider/keystone_role/openstack.rb
index b154620..799bce0 100644
--- a/keystone/lib/puppet/provider/keystone_role/openstack.rb
+++ b/keystone/lib/puppet/provider/keystone_role/openstack.rb
@@ -7,7 +7,7 @@ Puppet::Type.type(:keystone_role).provide(
 
   desc 'Provider for keystone roles.'
 
-  @credentials = Puppet::Provider::Openstack::CredentialsV2_0.new
+  @credentials = Puppet::Provider::Openstack::CredentialsV3.new
 
   def initialize(value={})
     super(value)
diff --git a/keystone/lib/puppet/provider/keystone_service/openstack.rb b/keystone/lib/puppet/provider/keystone_service/openstack.rb
index 40aa8e2..4ac7646 100644
--- a/keystone/lib/puppet/provider/keystone_service/openstack.rb
+++ b/keystone/lib/puppet/provider/keystone_service/openstack.rb
@@ -7,7 +7,7 @@ Puppet::Type.type(:keystone_service).provide(
 
   desc "Provider to manage keystone services."
 
-  @credentials = Puppet::Provider::Openstack::CredentialsV2_0.new
+  @credentials = Puppet::Provider::Openstack::CredentialsV3.new
 
   def initialize(value={})
     super(value)
@@ -15,21 +15,17 @@ Puppet::Type.type(:keystone_service).provide(
   end
 
   def create
-    properties = []
-    if resource[:description]
-      properties << '--description'
-      properties << resource[:description]
+    if resource[:type]
+      properties = [resource[:type]]
+      properties << '--name' << resource[:name]
+      if resource[:description]
+        properties << '--description' << resource[:description]
+      end
+      self.class.request('service', 'create', properties)
+      @property_hash[:ensure] = :present
+    else
+      raise(Puppet::Error, 'The type is mandatory for creating a keystone service')
     end
-    raise(Puppet::Error, 'The service type is mandatory') unless resource[:type]
-    properties << '--type'
-    properties << resource[:type]
-    properties << resource[:name]
-    self.class.request('service', 'create', properties)
-    @property_hash[:ensure] = :present
-  end
-
-  def exists?
-    @property_hash[:ensure] == :present
   end
 
   def destroy
@@ -37,22 +33,26 @@ Puppet::Type.type(:keystone_service).provide(
     @property_hash.clear
   end
 
-  def description=(value)
-    @property_flush[:description] = value
+  def exists?
+    @property_hash[:ensure] == :present
   end
 
   def description
     @property_hash[:description]
   end
 
-  def type=(value)
-    @property_flush[:type] = value
+  def description=(value)
+    @property_flush[:description] = value
   end
 
   def type
     @property_hash[:type]
   end
 
+  def type=(value)
+    @property_flush[:type] = value
+  end
+
   def id
     @property_hash[:id]
   end
@@ -80,9 +80,11 @@ Puppet::Type.type(:keystone_service).provide(
   end
 
   def flush
-    if ! @property_flush.empty?
-      destroy
-      create
+    options = []
+    if @property_flush && !@property_flush.empty?
+      options << "--description=#{resource[:description]}" if @property_flush[:description]
+      options << "--type=#{resource[:type]}" if @property_flush[:type]
+      self.class.request('service', 'set', [@property_hash[:id]] + options) unless options.empty?
       @property_flush.clear
     end
   end
diff --git a/keystone/lib/puppet/provider/keystone_tenant/openstack.rb b/keystone/lib/puppet/provider/keystone_tenant/openstack.rb
index 1987984..57a299f 100644
--- a/keystone/lib/puppet/provider/keystone_tenant/openstack.rb
+++ b/keystone/lib/puppet/provider/keystone_tenant/openstack.rb
@@ -7,7 +7,7 @@ Puppet::Type.type(:keystone_tenant).provide(
 
   desc "Provider to manage keystone tenants/projects."
 
-  @credentials = Puppet::Provider::Openstack::CredentialsV2_0.new
+  @credentials = Puppet::Provider::Openstack::CredentialsV3.new
 
   def initialize(value={})
     super(value)
@@ -15,7 +15,9 @@ Puppet::Type.type(:keystone_tenant).provide(
   end
 
   def create
-    properties = [resource[:name]]
+    # see if resource[:domain], or project_name::project_domain
+    project_name, project_domain = self.class.name_and_domain(resource[:name], resource[:domain])
+    properties = [project_name]
     if resource[:enabled] == :true
       properties << '--enable'
     elsif resource[:enabled] == :false
@@ -25,8 +27,12 @@ Puppet::Type.type(:keystone_tenant).provide(
       properties << '--description'
       properties << resource[:description]
     end
-     self.class.request('project', 'create', properties)
-     @property_hash[:ensure] = :present
+    if project_domain
+      properties << '--domain'
+      properties << project_domain
+    end
+    @property_hash = self.class.request('project', 'create', properties)
+    @property_hash[:ensure] = :present
   end
 
   def exists?
@@ -34,7 +40,7 @@ Puppet::Type.type(:keystone_tenant).provide(
   end
 
   def destroy
-    self.class.request('project', 'delete', @property_hash[:id])
+    self.class.request('project', 'delete', id)
     @property_hash.clear
   end
 
@@ -54,29 +60,67 @@ Puppet::Type.type(:keystone_tenant).provide(
     @property_hash[:description]
   end
 
+  def domain
+    @property_hash[:domain]
+  end
+
   def id
     @property_hash[:id]
   end
 
   def self.instances
+    instance_hash = {}
     list = request('project', 'list', '--long')
-    list.collect do |project|
+    list.each do |project|
+      domname = domain_name_from_id(project[:domain_id])
+      if instance_hash.include?(project[:name]) # not unique
+        curdomid = instance_hash[project[:name]][:domain_id]
+        if curdomid != default_domain_id
+          # Move the project from the short name slot to the long name slot
+          # because it is not in the default domain.
+          curdomname = domain_name_from_id(curdomid)
+          instance_hash["#{project[:name]}::#{curdomname}"] = instance_hash[project[:name]]
+          # Use the short name slot for the new project
+          instance_hash[project[:name]] = project
+        else
+          # Use the long name for the new project
+          instance_hash["#{project[:name]}::#{domname}"] = project
+        end
+      else
+        # Unique (for now) - store in short name slot
+        instance_hash[project[:name]] = project
+      end
+    end
+    instance_hash.keys.collect do |project_name|
+      project = instance_hash[project_name]
+      domname = domain_name_from_id(project[:domain_id])
       new(
-        :name        => project[:name],
+        :name        => project_name,
         :ensure      => :present,
         :enabled     => project[:enabled].downcase.chomp == 'true' ? true : false,
         :description => project[:description],
+        :domain      => domname,
+        :domain_id   => project[:domain_id],
         :id          => project[:id]
       )
     end
   end
 
   def self.prefetch(resources)
-    tenants = instances
-    resources.keys.each do |name|
-       if provider = tenants.find{ |tenant| tenant.name == name }
-        resources[name].provider = provider
+    project_hash = {}
+    projects = instances
+    resources.each do |resname, resource|
+      # resname may be specified as just "name" or "name::domain"
+      name, resdomain = name_and_domain(resname, resource[:domain])
+      provider = projects.find do |project|
+        # have a match if the full instance name matches the full resource name, OR
+        # the base resource name matches the base instance name, and the
+        # resource domain matches the instance domain
+        project_name, project_domain = name_and_domain(project.name, project.domain)
+        (project.name == resname) ||
+          ((project_name == name) && (project_domain == resdomain))
       end
+      resource.provider = provider if provider
     end
   end
 
@@ -90,8 +134,7 @@ Puppet::Type.type(:keystone_tenant).provide(
         options << '--disable'
       end
       (options << "--description=#{resource[:description]}") if @property_flush[:description]
-      options << @property_hash[:id]
-      self.class.request('project', 'set', options) unless options.empty?
+      self.class.request('project', 'set', [id] + options) unless options.empty?
       @property_flush.clear
     end
   end
diff --git a/keystone/lib/puppet/type/keystone_domain.rb b/keystone/lib/puppet/type/keystone_domain.rb
new file mode 100644
index 0000000..4a2d777
--- /dev/null
+++ b/keystone/lib/puppet/type/keystone_domain.rb
@@ -0,0 +1,54 @@
+# LP#1408531
+File.expand_path('../..', File.dirname(__FILE__)).tap { |dir| $LOAD_PATH.unshift(dir) unless $LOAD_PATH.include?(dir) }
+File.expand_path('../../../../openstacklib/lib', File.dirname(__FILE__)).tap { |dir| $LOAD_PATH.unshift(dir) unless $LOAD_PATH.include?(dir) }
+
+Puppet::Type.newtype(:keystone_domain) do
+
+  desc <<-EOT
+    This type can be used to manage
+    keystone domains.
+  EOT
+
+  ensurable
+
+  newparam(:name, :namevar => true) do
+    newvalues(/\w+/)
+  end
+
+  newproperty(:enabled) do
+    newvalues(/(t|T)rue/, /(f|F)alse/, true, false )
+    defaultto(true)
+    munge do |value|
+      value.to_s.downcase.to_sym
+    end
+  end
+
+  newproperty(:description)
+
+  newproperty(:is_default) do
+    desc <<-EOT
+      If this is true, this is the default domain used for v2.0 requests when the domain
+      is not specified, or used by v3 providers if no other domain is specified.  The id
+      of this domain will be written to the keystone config identity/default_domain_id
+      value.
+    EOT
+    newvalues(/(t|T)rue/, /(f|F)alse/, true, false )
+    defaultto(false)
+    munge do |value|
+      value.to_s.downcase.to_sym
+    end
+  end
+
+  newproperty(:id) do
+    validate do |v|
+      raise(Puppet::Error, 'This is a read only property')
+    end
+  end
+
+  # we should not do anything until the keystone service is started
+  autorequire(:service) do
+    'keystone'
+  end
+
+
+end
diff --git a/keystone/lib/puppet/type/keystone_tenant.rb b/keystone/lib/puppet/type/keystone_tenant.rb
index 6195d23..449ccd0 100644
--- a/keystone/lib/puppet/type/keystone_tenant.rb
+++ b/keystone/lib/puppet/type/keystone_tenant.rb
@@ -1,6 +1,7 @@
 # LP#1408531
 File.expand_path('../..', File.dirname(__FILE__)).tap { |dir| $LOAD_PATH.unshift(dir) unless $LOAD_PATH.include?(dir) }
 File.expand_path('../../../../openstacklib/lib', File.dirname(__FILE__)).tap { |dir| $LOAD_PATH.unshift(dir) unless $LOAD_PATH.include?(dir) }
+require 'puppet/provider/keystone/util'
 
 Puppet::Type.newtype(:keystone_tenant) do
 
@@ -34,6 +35,20 @@ Puppet::Type.newtype(:keystone_tenant) do
     end
   end
 
+  newproperty(:domain) do
+    desc 'Domain for tenant.'
+    newvalues(nil, /\S+/)
+    def insync?(is)
+      raise(Puppet::Error, "The domain cannot be changed from #{self.should} to #{is}") unless self.should == is
+      true
+    end
+  end
+
+  autorequire(:keystone_domain) do
+    # use the domain parameter if given, or the one from name if any
+    self[:domain] || Util.split_domain(self[:name])[1]
+  end
+
   # This ensures the service is started and therefore the keystone
   # config is configured IF we need them for authentication.
   # If there is no keystone config, authentication credentials
diff --git a/keystone/spec/spec_helper_acceptance.rb b/keystone/spec/spec_helper_acceptance.rb
index ffcb47a..429e807 100644
--- a/keystone/spec/spec_helper_acceptance.rb
+++ b/keystone/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,25 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','duritong/sysctl'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-rabbitmq'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-apache'), { :acceptable_exit_codes => 0 }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'keystone')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/keystone/spec/unit/provider/keystone/util_spec.rb b/keystone/spec/unit/provider/keystone/util_spec.rb
new file mode 100644
index 0000000..25f7b23
--- /dev/null
+++ b/keystone/spec/unit/provider/keystone/util_spec.rb
@@ -0,0 +1,29 @@
+require 'puppet'
+require 'spec_helper'
+require 'puppet/provider/keystone'
+require 'puppet/provider/keystone/util'
+
+describe "split_domain method" do
+  it 'should handle nil and empty strings' do
+    expect(Util.split_domain('')).to eq([nil, nil])
+    expect(Util.split_domain(nil)).to eq([nil, nil])
+  end
+  it 'should return name and no domain' do
+    expect(Util.split_domain('foo')).to eq(['foo', nil])
+    expect(Util.split_domain('foo::')).to eq(['foo', nil])
+  end
+  it 'should return name and domain' do
+    expect(Util.split_domain('foo::bar')).to eq(['foo', 'bar'])
+    expect(Util.split_domain('foo::bar::')).to eq(['foo', 'bar'])
+    expect(Util.split_domain('::foo::bar')).to eq(['::foo', 'bar'])
+    expect(Util.split_domain('::foo::bar::')).to eq(['::foo', 'bar'])
+    expect(Util.split_domain('foo::bar::baz')).to eq(['foo::bar', 'baz'])
+    expect(Util.split_domain('foo::bar::baz::')).to eq(['foo::bar', 'baz'])
+    expect(Util.split_domain('::foo::bar::baz')).to eq(['::foo::bar', 'baz'])
+    expect(Util.split_domain('::foo::bar::baz::')).to eq(['::foo::bar', 'baz'])
+  end
+  it 'should return domain only' do
+    expect(Util.split_domain('::foo')).to eq([nil, 'foo'])
+    expect(Util.split_domain('::foo::')).to eq([nil, 'foo'])
+  end
+end
diff --git a/keystone/spec/unit/provider/keystone_domain/openstack_spec.rb b/keystone/spec/unit/provider/keystone_domain/openstack_spec.rb
new file mode 100644
index 0000000..497f09b
--- /dev/null
+++ b/keystone/spec/unit/provider/keystone_domain/openstack_spec.rb
@@ -0,0 +1,192 @@
+require 'puppet'
+require 'spec_helper'
+require 'puppet/provider/keystone_domain/openstack'
+
+provider_class = Puppet::Type.type(:keystone_domain).provider(:openstack)
+
+class Puppet::Provider::Keystone
+  def self.reset
+    @admin_endpoint = nil
+    @tenant_hash    = nil
+    @admin_token    = nil
+    @keystone_file  = nil
+    @domain_id_to_name = nil
+    @default_domain_id = nil
+    @domain_hash = nil
+  end
+end
+
+describe provider_class do
+
+  after :each do
+    provider_class.reset
+  end
+
+  shared_examples 'authenticated with environment variables' do
+    ENV['OS_USERNAME']     = 'test'
+    ENV['OS_PASSWORD']     = 'abc123'
+    ENV['OS_PROJECT_NAME'] = 'test'
+    ENV['OS_AUTH_URL']     = 'http://127.0.0.1:35357/v2.0'
+  end
+
+  describe 'when managing a domain' do
+
+    let(:domain_attrs) do
+      {
+        :name         => 'foo',
+        :description  => 'foo',
+        :ensure       => 'present',
+        :enabled      => 'True',
+      }
+    end
+
+    let(:resource) do
+      Puppet::Type::Keystone_domain.new(domain_attrs)
+    end
+
+    let(:provider) do
+      provider_class.new(resource)
+    end
+
+    it_behaves_like 'authenticated with environment variables' do
+      describe '#create' do
+        it 'creates a domain' do
+          # keystone.conf
+          File.expects(:exists?).returns(true)
+          kcmock = {
+            'identity' => {'default_domain_id' => ' default'}
+          }
+          Puppet::Util::IniConfig::File.expects(:new).returns(kcmock)
+          kcmock.expects(:read).with('/etc/keystone/keystone.conf')
+          provider.class.expects(:openstack)
+                        .with('domain', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo'])
+                        .returns('id="1cb05cfed7c24279be884ba4f6520262"
+name="foo"
+description="foo"
+enabled=True
+')
+          provider.create
+          expect(provider.exists?).to be_truthy
+        end
+
+      end
+
+      describe '#destroy' do
+        it 'destroys a domain' do
+          provider.instance_variable_get('@property_hash')[:id] = 'my-domainid'
+          # keystone.conf
+          File.expects(:exists?).returns(true)
+          kcmock = {
+            'identity' => {'default_domain_id' => ' default'}
+          }
+          Puppet::Util::IniConfig::File.expects(:new).returns(kcmock)
+          kcmock.expects(:read).with('/etc/keystone/keystone.conf')
+          provider.class.expects(:openstack)
+                        .with('domain', 'set', ['foo', '--disable'])
+          provider.class.expects(:openstack)
+                        .with('domain', 'delete', 'foo')
+          provider.destroy
+          expect(provider.exists?).to be_falsey
+        end
+
+      end
+
+      describe '#instances' do
+        it 'finds every domain' do
+          provider.class.expects(:openstack)
+                        .with('domain', 'list', '--quiet', '--format', 'csv', [])
+                        .returns('"ID","Name","Description","Enabled"
+"1cb05cfed7c24279be884ba4f6520262","foo","foo",True
+')
+          instances = provider_class.instances
+          expect(instances.count).to eq(1)
+        end
+      end
+
+      describe '#create default' do
+        let(:domain_attrs) do
+          {
+            :name         => 'foo',
+            :description  => 'foo',
+            :ensure       => 'present',
+            :enabled      => 'True',
+            :is_default   => 'True',
+          }
+        end
+
+        it 'creates a default domain' do
+          File.expects(:exists?).returns(true)
+          mock = {
+            'identity' => {'default_domain_id' => ' default'}
+          }
+          Puppet::Util::IniConfig::File.expects(:new).returns(mock)
+          mock.expects(:read).with('/etc/keystone/keystone.conf')
+          mock.expects(:store)
+          provider.class.expects(:openstack)
+                        .with('domain', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo'])
+                        .returns('id="1cb05cfed7c24279be884ba4f6520262"
+name="foo"
+description="foo"
+enabled=True
+')
+          provider.create
+          expect(provider.exists?).to be_truthy
+          expect(mock['identity']['default_domain_id']).to eq('1cb05cfed7c24279be884ba4f6520262')
+        end
+      end
+
+      describe '#destroy default' do
+        it 'destroys a default domain' do
+          provider.instance_variable_get('@property_hash')[:is_default] = true
+          provider.instance_variable_get('@property_hash')[:id] = 'my-domainid'
+          # keystone.conf
+          File.expects(:exists?).returns(true)
+          kcmock = {
+            'identity' => {'default_domain_id' => ' my-domainid'}
+          }
+          Puppet::Util::IniConfig::File.expects(:new).returns(kcmock)
+          kcmock.expects(:read).with('/etc/keystone/keystone.conf')
+          kcmock.expects(:store)
+          provider.class.expects(:openstack)
+                        .with('domain', 'set', ['foo', '--disable'])
+          provider.class.expects(:openstack)
+                        .with('domain', 'delete', 'foo')
+          provider.destroy
+          expect(provider.exists?).to be_falsey
+          expect(kcmock['identity']['default_domain_id']).to eq('default')
+        end
+      end
+
+      describe '#flush' do
+        let(:domain_attrs) do
+          {
+            :name         => 'foo',
+            :description  => 'new description',
+            :ensure       => 'present',
+            :enabled      => 'True',
+            :is_default   => 'True',
+          }
+        end
+
+        it 'changes the description' do
+          provider.class.expects(:openstack)
+                        .with('domain', 'set', ['foo', '--description', 'new description'])
+          provider.description=('new description')
+          provider.flush
+        end
+
+        it 'changes is_default' do
+          # keystone.conf
+          File.expects(:exists?).returns(true)
+          kcmock = {
+            'identity' => {'default_domain_id' => ' my-domainid'}
+          }
+          Puppet::Util::IniConfig::File.expects(:new).returns(kcmock)
+          kcmock.expects(:read).with('/etc/keystone/keystone.conf')
+          provider.is_default=(true)
+          provider.flush
+        end
+      end
+    end
+  end
+end
diff --git a/keystone/spec/unit/provider/keystone_role/openstack_spec.rb b/keystone/spec/unit/provider/keystone_role/openstack_spec.rb
index 09e229b..6765e32 100644
--- a/keystone/spec/unit/provider/keystone_role/openstack_spec.rb
+++ b/keystone/spec/unit/provider/keystone_role/openstack_spec.rb
@@ -32,12 +32,7 @@ describe provider_class do
 
       describe '#create' do
         it 'creates a role' do
-          provider.class.stubs(:openstack)
-                        .with('role', 'list', '--quiet', '--format', 'csv', [])
-                        .returns('"ID","Name"
-"1cb05cfed7c24279be884ba4f6520262","foo"
-')
-          provider.class.stubs(:openstack)
+          provider.class.expects(:openstack)
                         .with('role', 'create', '--format', 'shell', 'foo')
                         .returns('name="foo"')
           provider.create
@@ -47,10 +42,7 @@ describe provider_class do
 
       describe '#destroy' do
         it 'destroys a role' do
-          provider.class.stubs(:openstack)
-                        .with('role', 'list', '--quiet', '--format', 'csv', [])
-                        .returns('"ID","Name"')
-          provider.class.stubs(:openstack)
+          provider.class.expects(:openstack)
                         .with('role', 'delete', [])
           provider.destroy
           expect(provider.exists?).to be_falsey
@@ -61,9 +53,6 @@ describe provider_class do
       describe '#exists' do
         context 'when role does not exist' do
           subject(:response) do
-            provider.class.stubs(:openstack)
-                          .with('role', 'list', '--quiet', '--format', 'csv', [])
-                        .returns('"ID","Name"')
             response = provider.exists?
           end
           it { is_expected.to be_falsey }
@@ -72,7 +61,7 @@ describe provider_class do
 
       describe '#instances' do
         it 'finds every role' do
-          provider.class.stubs(:openstack)
+          provider.class.expects(:openstack)
                         .with('role', 'list', '--quiet', '--format', 'csv', [])
                         .returns('"ID","Name"
 "1cb05cfed7c24279be884ba4f6520262","foo"
diff --git a/keystone/spec/unit/provider/keystone_service/openstack_spec.rb b/keystone/spec/unit/provider/keystone_service/openstack_spec.rb
index 5a299a5..f685a80 100644
--- a/keystone/spec/unit/provider/keystone_service/openstack_spec.rb
+++ b/keystone/spec/unit/provider/keystone_service/openstack_spec.rb
@@ -10,7 +10,7 @@ describe provider_class do
     ENV['OS_USERNAME']     = 'test'
     ENV['OS_PASSWORD']     = 'abc123'
     ENV['OS_PROJECT_NAME'] = 'test'
-    ENV['OS_AUTH_URL']     = 'http://127.0.0.1:35357/v2.0'
+    ENV['OS_AUTH_URL']     = 'http://127.0.0.1:5000/v3'
   end
 
   describe 'when managing a service' do
@@ -41,7 +41,7 @@ describe provider_class do
 "1cb05cfed7c24279be884ba4f6520262","foo","foo","foo"
 ')
           provider.class.stubs(:openstack)
-                        .with('service', 'create', '--format', 'shell', ['--description', 'foo', '--type', 'foo', 'foo'])
+                        .with('service', 'create', '--format', 'shell', ['foo', '--name', 'foo', '--description', 'foo'])
                         .returns('description="foo"
 enabled="True"
 id="8f0dd4c0abc44240998fbb3f5089ecbf"
diff --git a/keystone/spec/unit/provider/keystone_spec.rb b/keystone/spec/unit/provider/keystone_spec.rb
index 4981f1e..44d265f 100644
--- a/keystone/spec/unit/provider/keystone_spec.rb
+++ b/keystone/spec/unit/provider/keystone_spec.rb
@@ -6,13 +6,16 @@ require 'tempfile'
 klass = Puppet::Provider::Keystone
 
 class Puppet::Provider::Keystone
-  @credentials = Puppet::Provider::Openstack::CredentialsV2_0.new
+  @credentials = Puppet::Provider::Openstack::CredentialsV3.new
 
   def self.reset
     @admin_endpoint = nil
     @tenant_hash    = nil
     @admin_token    = nil
     @keystone_file  = nil
+    @domain_id_to_name = nil
+    @default_domain_id = nil
+    @domain_hash = nil
   end
 end
 
@@ -57,7 +60,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('http://192.168.56.210:35357/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('http://192.168.56.210:35357/v3/')
     end
 
     it 'should use localhost in the admin endpoint if bind_host is 0.0.0.0' do
@@ -65,7 +68,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('http://127.0.0.1:35357/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('http://127.0.0.1:35357/v3/')
     end
 
     it 'should use [::1] in the admin endpoint if bind_host is ::0' do
@@ -73,7 +76,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('http://[::1]:35357/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('http://[::1]:35357/v3/')
     end
 
     it 'should use localhost in the admin endpoint if bind_host is unspecified' do
@@ -81,7 +84,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('http://127.0.0.1:35357/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('http://127.0.0.1:35357/v3/')
     end
 
     it 'should use https if ssl is enabled' do
@@ -89,7 +92,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('https://192.168.56.210:35357/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('https://192.168.56.210:35357/v3/')
     end
 
     it 'should use http if ssl is disabled' do
@@ -97,7 +100,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('http://192.168.56.210:35357/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('http://192.168.56.210:35357/v3/')
     end
 
     it 'should use the defined admin_endpoint if available' do
@@ -105,7 +108,7 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('https://keystone.example.com/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('https://keystone.example.com/v3/')
     end
 
     it 'should handle an admin_endpoint with a trailing slash' do
@@ -113,9 +116,58 @@ describe Puppet::Provider::Keystone do
       File.expects(:exists?).with("/etc/keystone/keystone.conf").returns(true)
       Puppet::Util::IniConfig::File.expects(:new).returns(mock)
       mock.expects(:read).with('/etc/keystone/keystone.conf')
-      expect(klass.get_admin_endpoint).to eq('https://keystone.example.com/v2.0/')
+      expect(klass.get_admin_endpoint).to eq('https://keystone.example.com/v3/')
     end
 
   end
 
+  describe 'when using domains' do
+    it 'name_and_domain should return the resource domain' do
+      expect(klass.name_and_domain('foo::in_name', 'from_resource', 'default')).to eq(['foo', 'from_resource'])
+    end
+    it 'name_and_domain should return the default domain' do
+      expect(klass.name_and_domain('foo', nil, 'default')).to eq(['foo', 'default'])
+    end
+    it 'name_and_domain should return the domain part of the name' do
+      expect(klass.name_and_domain('foo::in_name', nil, 'default')).to eq(['foo', 'in_name'])
+    end
+    it 'should return the default domain name using the default_domain_id from keystone.conf' do
+      ENV['OS_USERNAME']     = 'test'
+      ENV['OS_PASSWORD']     = 'abc123'
+      ENV['OS_PROJECT_NAME'] = 'test'
+      ENV['OS_AUTH_URL']     = 'http://127.0.0.1:35357/v3'
+      mock = {
+        'DEFAULT' => {
+          'admin_endpoint' => 'http://127.0.0.1:35357',
+          'admin_token'    => 'admin_token'
+        },
+        'identity' => {'default_domain_id' => 'somename'}
+      }
+      File.expects(:exists?).with('/etc/keystone/keystone.conf').returns(true)
+      Puppet::Util::IniConfig::File.expects(:new).returns(mock)
+      mock.expects(:read).with('/etc/keystone/keystone.conf')
+      klass.expects(:openstack)
+           .with('domain', 'list', '--quiet', '--format', 'csv', [])
+           .returns('"ID","Name","Enabled","Description"
+"somename","SomeName",True,"default domain"
+')
+      expect(klass.name_and_domain('foo')).to eq(['foo', 'SomeName'])
+    end
+    it 'should return Default if default_domain_id is not configured' do
+      ENV['OS_USERNAME']     = 'test'
+      ENV['OS_PASSWORD']     = 'abc123'
+      ENV['OS_PROJECT_NAME'] = 'test'
+      ENV['OS_AUTH_URL']     = 'http://127.0.0.1:35357/v3'
+      mock = {}
+      Puppet::Util::IniConfig::File.expects(:new).returns(mock)
+      File.expects(:exists?).with('/etc/keystone/keystone.conf').returns(true)
+      mock.expects(:read).with('/etc/keystone/keystone.conf')
+      klass.expects(:openstack)
+           .with('domain', 'list', '--quiet', '--format', 'csv', [])
+           .returns('"ID","Name","Enabled","Description"
+"default","Default",True,"default domain"
+')
+      expect(klass.name_and_domain('foo')).to eq(['foo', 'Default'])
+    end
+  end
 end
diff --git a/keystone/spec/unit/provider/keystone_tenant/openstack_spec.rb b/keystone/spec/unit/provider/keystone_tenant/openstack_spec.rb
index 1dec49e..fd17e42 100644
--- a/keystone/spec/unit/provider/keystone_tenant/openstack_spec.rb
+++ b/keystone/spec/unit/provider/keystone_tenant/openstack_spec.rb
@@ -4,87 +4,233 @@ require 'puppet/provider/keystone_tenant/openstack'
 
 provider_class = Puppet::Type.type(:keystone_tenant).provider(:openstack)
 
+class Puppet::Provider::Keystone
+  def self.reset
+    @admin_endpoint = nil
+    @tenant_hash    = nil
+    @admin_token    = nil
+    @keystone_file  = nil
+    @domain_id_to_name = nil
+    @default_domain_id = nil
+    @domain_hash = nil
+  end
+end
+
 describe provider_class do
 
+  after :each do
+    provider_class.reset
+  end
+
+  let(:tenant_attrs) do
+    {
+      :name         => 'foo',
+      :description  => 'foo',
+      :ensure       => 'present',
+      :enabled      => 'True',
+    }
+  end
+
+  let(:resource) do
+    Puppet::Type::Keystone_tenant.new(tenant_attrs)
+  end
+
+  let(:provider) do
+    provider_class.new(resource)
+  end
+
+  def before_hook(domainlist)
+    if domainlist
+      provider.class.expects(:openstack).once
+                    .with('domain', 'list', '--quiet', '--format', 'csv', [])
+                    .returns('"ID","Name","Enabled","Description"
+"foo_domain_id","foo_domain",True,"foo domain"
+"bar_domain_id","bar_domain",True,"bar domain"
+"another_domain_id","another_domain",True,"another domain"
+"disabled_domain_id","disabled_domain",False,"disabled domain"
+"default","Default",True,"the default domain"
+')
+    end
+  end
+
+  before :each, :domainlist => true do
+    before_hook(true)
+  end
+
+  before :each, :domainlist => false do
+    before_hook(false)
+  end
+
   shared_examples 'authenticated with environment variables' do
     ENV['OS_USERNAME']     = 'test'
     ENV['OS_PASSWORD']     = 'abc123'
     ENV['OS_PROJECT_NAME'] = 'test'
-    ENV['OS_AUTH_URL']     = 'http://127.0.0.1:35357/v2.0'
+    ENV['OS_AUTH_URL']     = 'http://127.0.0.1:35357/v3'
   end
 
   describe 'when managing a tenant' do
 
-    let(:tenant_attrs) do
-      {
-        :name         => 'foo',
-        :description  => 'foo',
-        :ensure       => 'present',
-        :enabled      => 'True',
-      }
-    end
-
-    let(:resource) do
-      Puppet::Type::Keystone_tenant.new(tenant_attrs)
-    end
-
-    let(:provider) do
-      provider_class.new(resource)
-    end
-
     it_behaves_like 'authenticated with environment variables' do
-      describe '#create' do
+      describe '#create', :domainlist => true do
         it 'creates a tenant' do
-          provider.class.stubs(:openstack)
-                        .with('project', 'list', '--quiet', '--format', 'csv', '--long')
-                        .returns('"ID","Name","Description","Enabled"
-"1cb05cfed7c24279be884ba4f6520262","foo","foo",True
-')
-          provider.class.stubs(:openstack)
-                        .with('project', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo'])
+          provider.class.expects(:openstack)
+                        .with('project', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo', '--domain', 'Default'])
                         .returns('description="foo"
 enabled="True"
 name="foo"
+id="foo"
+domain_id="foo_domain_id"
 ')
           provider.create
           expect(provider.exists?).to be_truthy
         end
       end
 
-      describe '#destroy' do
+      describe '#destroy', :domainlist => false do
         it 'destroys a tenant' do
-          provider.class.stubs(:openstack)
-                        .with('project', 'list', '--quiet', '--format', 'csv', '--long')
-                        .returns('"ID","Name","Description","Enabled"')
-          provider.class.stubs(:openstack)
-                        .with('project', 'delete', [])
+          provider.instance_variable_get('@property_hash')[:id] = 'my-project-id'
+          provider.class.expects(:openstack)
+                        .with('project', 'delete', 'my-project-id')
           provider.destroy
           expect(provider.exists?).to be_falsey
         end
       end
 
-      context 'when tenant does not exist' do
+      context 'when tenant does not exist', :domainlist => false do
         subject(:response) do
-          provider.class.stubs(:openstack)
-                        .with('project', 'list', '--quiet', '--format', 'csv', '--long')
-                        .returns('"ID","Name","Description","Enabled"')
           response = provider.exists?
         end
 
-        it { is_expected.to be_falsey }
+        it { expect(response).to be_falsey }
       end
 
-      describe '#instances' do
+      describe '#instances', :domainlist => true do
         it 'finds every tenant' do
-          provider.class.stubs(:openstack)
+          provider.class.expects(:openstack)
                         .with('project', 'list', '--quiet', '--format', 'csv', '--long')
-                       .returns('"ID","Name","Description","Enabled"
-"1cb05cfed7c24279be884ba4f6520262","foo","foo",True
+                       .returns('"ID","Name","Domain ID","Description","Enabled"
+"1cb05cfed7c24279be884ba4f6520262","foo","foo_domain_id","foo",True
+"2cb05cfed7c24279be884ba4f6520262","foo","bar_domain_id","foo",True
 ')
-          instances = Puppet::Type::Keystone_tenant::ProviderOpenstack.instances
-          expect(instances.count).to eq(1)
+          instances = provider.class.instances
+          expect(instances[0].name).to eq('foo')
+          expect(instances[0].domain).to eq('bar_domain')
+          expect(instances[1].name).to eq('foo::foo_domain')
         end
       end
     end
+
+    describe 'v3 domains with no domain in resource', :domainlist => true do
+
+      let(:tenant_attrs) do
+        {
+          :name         => 'foo',
+          :description  => 'foo',
+          :ensure       => 'present',
+          :enabled      => 'True'
+        }
+      end
+
+      it 'adds default domain to commands' do
+        mock = {
+          'identity' => {'default_domain_id' => 'foo_domain_id'}
+        }
+        Puppet::Util::IniConfig::File.expects(:new).returns(mock)
+        File.expects(:exists?).with('/etc/keystone/keystone.conf').returns(true)
+        mock.expects(:read).with('/etc/keystone/keystone.conf')
+        provider.class.expects(:openstack)
+          .with('project', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo', '--domain', 'foo_domain'])
+          .returns('description="foo"
+enabled="True"
+name="foo"
+id="project-id"
+domain_id="foo_domain_id"
+')
+        provider.create
+        expect(provider.exists?).to be_truthy
+        expect(provider.id).to eq("project-id")
+      end
+
+    end
+
+    describe 'v3 domains with domain in resource', :domainlist => false do
+
+      let(:tenant_attrs) do
+        {
+          :name         => 'foo',
+          :description  => 'foo',
+          :ensure       => 'present',
+          :enabled      => 'True',
+          :domain       => 'foo_domain'
+        }
+      end
+
+      it 'uses given domain in commands' do
+        provider.class.expects(:openstack)
+          .with('project', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo', '--domain', 'foo_domain'])
+          .returns('description="foo"
+enabled="True"
+name="foo"
+id="project-id"
+domain_id="foo_domain_id"
+')
+        provider.create
+        expect(provider.exists?).to be_truthy
+        expect(provider.id).to eq("project-id")
+      end
+    end
+
+    describe 'v3 domains with domain in name/title', :domainlist => false do
+
+      let(:tenant_attrs) do
+        {
+          :name         => 'foo::foo_domain',
+          :description  => 'foo',
+          :ensure       => 'present',
+          :enabled      => 'True'
+        }
+      end
+
+      it 'uses given domain in commands' do
+        provider.class.expects(:openstack)
+          .with('project', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo', '--domain', 'foo_domain'])
+          .returns('description="foo"
+enabled="True"
+name="foo"
+id="project-id"
+domain_id="foo_domain_id"
+')
+        provider.create
+        expect(provider.exists?).to be_truthy
+        expect(provider.id).to eq("project-id")
+      end
+    end
+
+    describe 'v3 domains with domain in name/title and in resource', :domainlist => false do
+
+      let(:tenant_attrs) do
+        {
+          :name         => 'foo::bar_domain',
+          :description  => 'foo',
+          :ensure       => 'present',
+          :enabled      => 'True',
+          :domain       => 'foo_domain'
+        }
+      end
+
+      it 'uses given domain in commands' do
+        provider.class.expects(:openstack)
+          .with('project', 'create', '--format', 'shell', ['foo', '--enable', '--description', 'foo', '--domain', 'foo_domain'])
+          .returns('description="foo"
+enabled="True"
+name="foo"
+id="project-id"
+domain_id="foo_domain_id"
+')
+        provider.create
+        expect(provider.exists?).to be_truthy
+        expect(provider.id).to eq("project-id")
+      end
+    end
   end
 end
diff --git a/keystone/spec/unit/type/keystone_tenant_spec.rb b/keystone/spec/unit/type/keystone_tenant_spec.rb
new file mode 100644
index 0000000..978fa22
--- /dev/null
+++ b/keystone/spec/unit/type/keystone_tenant_spec.rb
@@ -0,0 +1,25 @@
+require 'spec_helper'
+require 'puppet'
+require 'puppet/type/keystone_tenant'
+
+describe Puppet::Type.type(:keystone_tenant) do
+
+  before :each do
+    @project = Puppet::Type.type(:keystone_tenant).new(
+    :name   => 'foo',
+    :domain => 'foo-domain',
+    )
+
+    @domain = @project.parameter('domain')
+  end
+
+  it 'should not be in sync for domain changes' do
+    expect { @domain.insync?('not-the-domain') }.to raise_error(Puppet::Error, /The domain cannot be changed from/)
+    expect { @domain.insync?(nil) }.to raise_error(Puppet::Error, /The domain cannot be changed from/)
+  end
+
+  it 'should be in sync if domain is the same' do
+    expect(@domain.insync?('foo-domain')).to be true
+  end
+
+end
diff --git a/manila/Gemfile b/manila/Gemfile
index d6d9f84..aeb0bd7 100644
--- a/manila/Gemfile
+++ b/manila/Gemfile
@@ -18,6 +18,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
 end
 
 if puppetversion = ENV['PUPPET_GEM_VERSION']
diff --git a/manila/manifests/backend/generic.pp b/manila/manifests/backend/generic.pp
index e39367b..ec815f7 100644
--- a/manila/manifests/backend/generic.pp
+++ b/manila/manifests/backend/generic.pp
@@ -53,37 +53,59 @@
 #   (optional) Name or id of cinder volume type which will be used for all
 #   volumes created by driver.
 #
+# [*delete_share_server_with_last_share*]
+#   (optional) With this option is set to True share server willbe deleted
+#   on deletion of last share.
+#   Defaults to: False
+#
+# [*unmanage_remove_access_rules*]
+#   (optional) If set to True, then manila will deny access and remove all
+#   access rules on share unmanage. If set to False - nothing will be changed.
+#   Defaults to: False
+#
+# [*automatic_share_server_cleanup*]
+#   (optional) If set to True, then Manila will delete all share servers which
+#   were unused more than specified time. If set to False, automatic deletion
+#   of share servers will be disabled.
+#   Defaults to: True
+#
 define manila::backend::generic (
   $driver_handles_share_servers,
-  $share_backend_name               = $name,
-  $smb_template_config_path         = '$state_path/smb.conf',
-  $volume_name_template             = 'manila-share-%s',
-  $volume_snapshot_name_template    = 'manila-snapshot-%s',
-  $share_mount_path                 = '/shares',
-  $max_time_to_create_volume        = 180,
-  $max_time_to_attach               = 120,
-  $service_instance_smb_config_path = '$share_mount_path/smb.conf',
-  $share_volume_fstype              = 'ext4',
+  $share_backend_name                  = $name,
+  $smb_template_config_path            = '$state_path/smb.conf',
+  $volume_name_template                = 'manila-share-%s',
+  $volume_snapshot_name_template       = 'manila-snapshot-%s',
+  $share_mount_path                    = '/shares',
+  $max_time_to_create_volume           = 180,
+  $max_time_to_attach                  = 120,
+  $service_instance_smb_config_path    = '$share_mount_path/smb.conf',
+  $share_volume_fstype                 = 'ext4',
   $share_helpers = ['CIFS=manila.share.drivers.generic.CIFSHelper',
                     'NFS=manila.share.drivers.generic.NFSHelper'],
-  $cinder_volume_type               = undef,
+  $cinder_volume_type                  = undef,
+  $delete_share_server_with_last_share = 'False',
+  $unmanage_remove_access_rules        = 'False',
+  $automatic_share_server_cleanup      = 'True',
 ) {
 
   $share_driver = 'manila.share.drivers.generic.GenericShareDriver'
 
   manila_config {
-    "${name}/driver_handles_share_servers":     value => $driver_handles_share_servers;
-    "${name}/share_backend_name":               value => $share_backend_name;
-    "${name}/share_driver":                     value => $share_driver;
-    "${name}/smb_template_config_path":         value => $smb_template_config_path;
-    "${name}/volume_name_template":             value => $volume_name_template;
-    "${name}/volume_snapshot_name_template":    value => $volume_snapshot_name_template;
-    "${name}/share_mount_path":                 value => $share_mount_path;
-    "${name}/max_time_to_create_volume":        value => $max_time_to_create_volume;
-    "${name}/max_time_to_attach":               value => $max_time_to_attach;
-    "${name}/service_instance_smb_config_path": value => $service_instance_smb_config_path;
-    "${name}/share_volume_fstype":              value => $share_volume_fstype;
-    "${name}/share_helpers":                    value => join($share_helpers, ',');
-    "${name}/cinder_volume_type":               value => $cinder_volume_type;
+    "${name}/driver_handles_share_servers":        value => $driver_handles_share_servers;
+    "${name}/share_backend_name":                  value => $share_backend_name;
+    "${name}/share_driver":                        value => $share_driver;
+    "${name}/smb_template_config_path":            value => $smb_template_config_path;
+    "${name}/volume_name_template":                value => $volume_name_template;
+    "${name}/volume_snapshot_name_template":       value => $volume_snapshot_name_template;
+    "${name}/share_mount_path":                    value => $share_mount_path;
+    "${name}/max_time_to_create_volume":           value => $max_time_to_create_volume;
+    "${name}/max_time_to_attach":                  value => $max_time_to_attach;
+    "${name}/service_instance_smb_config_path":    value => $service_instance_smb_config_path;
+    "${name}/share_volume_fstype":                 value => $share_volume_fstype;
+    "${name}/share_helpers":                       value => join($share_helpers, ',');
+    "${name}/cinder_volume_type":                  value => $cinder_volume_type;
+    "${name}/delete_share_server_with_last_share": value => $delete_share_server_with_last_share;
+    "${name}/unmanage_remove_access_rules":        value => $unmanage_remove_access_rules;
+    "${name}/automatic_share_server_cleanup":      value => $automatic_share_server_cleanup;
   }
 }
diff --git a/manila/manifests/share/generic.pp b/manila/manifests/share/generic.pp
index f19713a..2fa315f 100644
--- a/manila/manifests/share/generic.pp
+++ b/manila/manifests/share/generic.pp
@@ -50,33 +50,54 @@
 #   (optional) Name or id of cinder volume type which will be used for all
 #   volumes created by driver.
 #
+# [*delete_share_server_with_last_share*]
+#   (optional) With this option is set to True share server willbe deleted
+#   on deletion of last share.
+#   Defaults to: False
+#
+# [*unmanage_remove_access_rules*]
+#   (optional) If set to True, then manila will deny access and remove all
+#   access rules on share unmanage. If set to False - nothing will be changed.
+#   Defaults to: False
+#
+# [*automatic_share_server_cleanup*]
+#   (optional) If set to True, then Manila will delete all share servers which
+#   were unused more than specified time. If set to False, automatic deletion
+#   of share servers will be disabled.
+#   Defaults to: True
 
 class manila::share::generic (
   $driver_handles_share_servers,
-  $smb_template_config_path         = '$state_path/smb.conf',
-  $volume_name_template             = 'manila-share-%s',
-  $volume_snapshot_name_template    = 'manila-snapshot-%s',
-  $share_mount_path                 = '/shares',
-  $max_time_to_create_volume        = 180,
-  $max_time_to_attach               = 120,
-  $service_instance_smb_config_path = '$share_mount_path/smb.conf',
-  $share_volume_fstype              = 'ext4',
+  $smb_template_config_path            = '$state_path/smb.conf',
+  $volume_name_template                = 'manila-share-%s',
+  $volume_snapshot_name_template       = 'manila-snapshot-%s',
+  $share_mount_path                    = '/shares',
+  $max_time_to_create_volume           = 180,
+  $max_time_to_attach                  = 120,
+  $service_instance_smb_config_path    = '$share_mount_path/smb.conf',
+  $share_volume_fstype                 = 'ext4',
   $share_helpers = ['CIFS=manila.share.drivers.generic.CIFSHelper',
                     'NFS=manila.share.drivers.generic.NFSHelper'],
-  $cinder_volume_type               = undef,
+  $cinder_volume_type                  = undef,
+  $delete_share_server_with_last_share = 'False',
+  $unmanage_remove_access_rules        = 'False',
+  $automatic_share_server_cleanup      = 'True',
 ) {
 
   manila::backend::generic { 'DEFAULT':
-    driver_handles_share_servers     => $driver_handles_share_servers,
-    smb_template_config_path         => $smb_template_config_path,
-    volume_name_template             => $volume_name_template,
-    volume_snapshot_name_template    => $volume_snapshot_name_template,
-    share_mount_path                 => $share_mount_path,
-    max_time_to_create_volume        => $max_time_to_create_volume,
-    max_time_to_attach               => $max_time_to_attach,
-    service_instance_smb_config_path => $service_instance_smb_config_path,
-    share_helpers                    => $share_helpers,
-    share_volume_fstype              => $share_volume_fstype,
-    cinder_volume_type               => $cinder_volume_type,
+    driver_handles_share_servers        => $driver_handles_share_servers,
+    smb_template_config_path            => $smb_template_config_path,
+    volume_name_template                => $volume_name_template,
+    volume_snapshot_name_template       => $volume_snapshot_name_template,
+    share_mount_path                    => $share_mount_path,
+    max_time_to_create_volume           => $max_time_to_create_volume,
+    max_time_to_attach                  => $max_time_to_attach,
+    service_instance_smb_config_path    => $service_instance_smb_config_path,
+    share_helpers                       => $share_helpers,
+    share_volume_fstype                 => $share_volume_fstype,
+    cinder_volume_type                  => $cinder_volume_type,
+    delete_share_server_with_last_share => $delete_share_server_with_last_share,
+    unmanage_remove_access_rules        => $unmanage_remove_access_rules,
+    automatic_share_server_cleanup      => $automatic_share_server_cleanup,
   }
 }
diff --git a/manila/metadata.json b/manila/metadata.json
index f191ba2..8e3fbb9 100644
--- a/manila/metadata.json
+++ b/manila/metadata.json
@@ -35,7 +35,7 @@
     { "name": "puppetlabs/inifile", "version_requirement": ">=1.0.0 <2.0.0" },
     { "name": "stackforge/keystone", "version_requirement": ">=5.0.0 <6.0.0" },
     { "name": "stackforge/glance", "version_requirement": ">=5.0.0 <6.0.0" },
-    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <4.0.0" },
+    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <6.0.0" },
     { "name": "puppetlabs/stdlib", "version_requirement": ">=4.0.0 <5.0.0" },
     { "name": "stackforge/openstacklib", "version_requirement": ">=5.0.0 <6.0.0" }
   ]
diff --git a/manila/spec/classes/manila_share_generic_spec.rb b/manila/spec/classes/manila_share_generic_spec.rb
index 29aaf01..b1f5421 100644
--- a/manila/spec/classes/manila_share_generic_spec.rb
+++ b/manila/spec/classes/manila_share_generic_spec.rb
@@ -4,16 +4,19 @@ describe 'manila::share::generic' do
 
   let :params do
     {
-      :driver_handles_share_servers     => true,
-      :smb_template_config_path         => '$state_path/smb.conf',
-      :volume_name_template             => 'manila-share-%s',
-      :volume_snapshot_name_template    => 'manila-snapshot-%s',
-      :share_mount_path                 => '/shares',
-      :max_time_to_create_volume        => 180,
-      :max_time_to_attach               => 120,
-      :service_instance_smb_config_path => '$share_mount_path/smb.conf',
-      :share_volume_fstype              => 'ext4',
-      :cinder_volume_type               => 'gold',
+      :driver_handles_share_servers        => true,
+      :smb_template_config_path            => '$state_path/smb.conf',
+      :volume_name_template                => 'manila-share-%s',
+      :volume_snapshot_name_template       => 'manila-snapshot-%s',
+      :share_mount_path                    => '/shares',
+      :max_time_to_create_volume           => 180,
+      :max_time_to_attach                  => 120,
+      :service_instance_smb_config_path    => '$share_mount_path/smb.conf',
+      :share_volume_fstype                 => 'ext4',
+      :cinder_volume_type                  => 'gold',
+      :delete_share_server_with_last_share => 'True',
+      :unmanage_remove_access_rules        => 'True',
+      :automatic_share_server_cleanup      => 'False',
     }
   end
 
diff --git a/manila/spec/spec_helper_acceptance.rb b/manila/spec/spec_helper_acceptance.rb
index 4b25554..429e807 100644
--- a/manila/spec/spec_helper_acceptance.rb
+++ b/manila/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,30 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'manila')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/neutron/Gemfile b/neutron/Gemfile
index 05121d6..278451f 100644
--- a/neutron/Gemfile
+++ b/neutron/Gemfile
@@ -18,6 +18,7 @@ end
 
 group :system_tests do
   gem 'beaker-rspec', :require => 'false'
+  gem 'beaker-puppet_install_helper', :require => false
 end
 
 if facterversion = ENV['FACTER_GEM_VERSION']
diff --git a/neutron/lib/puppet/provider/neutron_router/neutron.rb b/neutron/lib/puppet/provider/neutron_router/neutron.rb
index 7cf36e5..d7f7fd1 100644
--- a/neutron/lib/puppet/provider/neutron_router/neutron.rb
+++ b/neutron/lib/puppet/provider/neutron_router/neutron.rb
@@ -119,7 +119,7 @@ EOT
   end
 
   def parse_gateway_network_id(external_gateway_info_)
-    match_data = /\{"network_id": "(.*?)"/.match(external_gateway_info_)
+    match_data = /\{"network_id": "(.*?)"/.match(external_gateway_info_.gsub(/\\"/,'"'))
     if match_data
       match_data[1]
     else
diff --git a/neutron/manifests/server.pp b/neutron/manifests/server.pp
index d159aa7..1ca8549 100644
--- a/neutron/manifests/server.pp
+++ b/neutron/manifests/server.pp
@@ -52,6 +52,11 @@
 #   (where '/keystone' is the admin prefix)
 #   Defaults to false for empty. If defined, should be a string with a leading '/' and no trailing '/'.
 #
+# [*auth_region*]
+#   (optional) The authentication region. Note this value is case-sensitive and
+#   must match the endpoint region defined in Keystone.
+#   Defaults to undef
+#
 # [*auth_tenant*]
 #   (optional) The tenant of the auth user
 #   Defaults to services
@@ -196,6 +201,7 @@ class neutron::server (
   $manage_service                   = true,
   $service_name                     = $::neutron::params::server_service,
   $auth_password                    = false,
+  $auth_region                      = undef,
   $auth_type                        = 'keystone',
   $auth_tenant                      = 'services',
   $auth_user                        = 'neutron',
@@ -471,6 +477,12 @@ class neutron::server (
         'filter:authtoken/auth_uri': value => $auth_uri_real;
       }
 
+      if $auth_region {
+        neutron_config {
+          'keystone_authtoken/auth_region': value => $auth_region;
+        }
+      }
+
       if $identity_uri {
         neutron_config {
           'keystone_authtoken/identity_uri': value => $identity_uri;
diff --git a/neutron/spec/classes/neutron_server_spec.rb b/neutron/spec/classes/neutron_server_spec.rb
index 0e256aa..ad0fbe1 100644
--- a/neutron/spec/classes/neutron_server_spec.rb
+++ b/neutron/spec/classes/neutron_server_spec.rb
@@ -316,6 +316,20 @@ describe 'neutron::server' do
     end
   end
 
+  describe "with custom auth region" do
+    let :facts do
+      default_facts.merge({ :osfamily => 'RedHat' })
+    end
+    before do
+      params.merge!({
+        :auth_region => 'MyRegion',
+      })
+    end
+    it 'configures auth_region' do
+      is_expected.to contain_neutron_config('keystone_authtoken/auth_region').with_value('MyRegion');
+    end
+  end
+
   context 'on Debian platforms' do
     let :facts do
       default_facts.merge(
diff --git a/neutron/spec/spec_helper_acceptance.rb b/neutron/spec/spec_helper_acceptance.rb
index fd61c89..429e807 100644
--- a/neutron/spec/spec_helper_acceptance.rb
+++ b/neutron/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,31 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','duritong/sysctl'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-vswitch /etc/puppet/modules/vswitch')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'neutron')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/neutron/spec/unit/provider/neutron_router/neutron_spec.rb b/neutron/spec/unit/provider/neutron_router/neutron_spec.rb
index 0e2c166..9016ab0 100644
--- a/neutron/spec/unit/provider/neutron_router/neutron_spec.rb
+++ b/neutron/spec/unit/provider/neutron_router/neutron_spec.rb
@@ -3,6 +3,7 @@ require 'spec_helper'
 require 'puppet/provider/neutron_router/neutron'
 
 provider_class = Puppet::Type.type(:neutron_router).provider(:neutron)
+klass = Puppet::Provider::Neutron
 
 describe provider_class do
 
@@ -72,4 +73,33 @@ tenant_id="60f9544eb94c42a6b7e8e98c2be981b1"'
 
   end
 
+  describe 'when parsing an external gateway info' do
+    let :resource do
+      Puppet::Type::Neutron_router.new(router_attrs)
+    end
+
+    let :provider do
+      provider_class.new(resource)
+    end
+
+    after :each do
+      klass.reset
+    end
+
+    it 'should detect a gateway net id' do
+      klass.stubs(:auth_neutron).returns(
+        'external_gateway_info="{\"network_id\": \"1b-b1\", \"enable_snat\": true, \"external_fixed_ips\": [{\"subnet_id\": \"1b-b1\", \"ip_address\": \"1.1.1.1\"}]}"'
+      )
+      result = klass.get_neutron_resource_attrs 'foo', nil
+      expect(provider.parse_gateway_network_id(result['external_gateway_info'])).to eql('1b-b1')
+    end
+
+    it 'should return empty value, if there is no net id found' do
+      klass.stubs(:auth_neutron).returns('external_gateway_info="{}"')
+      result = klass.get_neutron_resource_attrs 'foo', nil
+      expect(provider.parse_gateway_network_id(result['external_gateway_info'])).to eql('')
+    end
+
+  end
+
 end
diff --git a/nova/Gemfile b/nova/Gemfile
index 3c0b875..9ea2113 100644
--- a/nova/Gemfile
+++ b/nova/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/nova/manifests/compute/ironic.pp b/nova/manifests/compute/ironic.pp
index 2924a02..52bb375 100644
--- a/nova/manifests/compute/ironic.pp
+++ b/nova/manifests/compute/ironic.pp
@@ -4,43 +4,58 @@
 #
 # === Parameters:
 #
-# [*admin_user*]
-#   Admin username
+# [*admin_username*]
 #   The admin username for Ironic to connect to Nova.
 #   Defaults to 'admin'
 #
-# [*admin_passwd*]
-#   Admin password
+# [*admin_password*]
 #   The admin password for Ironic to connect to Nova.
 #   Defaults to 'ironic'
 #
 # [*admin_url*]
-#   Admin url
 #   The address of the Keystone api endpoint.
 #   Defaults to 'http://127.0.0.1:35357/v2.0'
 #
 # [*admin_tenant_name*]
-#   Admin tenant name
 #   The Ironic Keystone tenant name.
 #   Defaults to 'services'
 #
 # [*api_endpoint*]
-#   Api endpoint
 #   The url for Ironic api endpoint.
 #   Defaults to 'http://127.0.0.1:6385/v1'
 #
+# [*admin_user*]
+#   (optional) DEPRECATED: Use admin_username instead.
+#
+# [*admin_passwd*]
+#   (optional) DEPRECATED: Use admin_password instead.
+#
 
 class nova::compute::ironic (
-  $admin_user           = 'admin',
-  $admin_passwd         = 'ironic',
+  $admin_username       = 'admin',
+  $admin_password       = 'ironic',
   $admin_url            = 'http://127.0.0.1:35357/v2.0',
   $admin_tenant_name    = 'services',
   $api_endpoint         = 'http://127.0.0.1:6385/v1',
+  # DEPRECATED PARAMETERS
+  $admin_user           = undef,
+  $admin_passwd         = undef,
 ) {
 
+  if $admin_user {
+    warning('The admin_user parameter is deprecated, use admin_username instead.')
+  }
+
+  if $admin_passwd {
+    warning('The admin_passwd parameter is deprecated, use admin_password instead.')
+  }
+
+  $admin_username_real = pick($admin_user, $admin_username)
+  $admin_password_real = pick($admin_passwd, $admin_password)
+
   nova_config {
-    'ironic/admin_username':            value => $admin_user;
-    'ironic/admin_password':            value => $admin_passwd;
+    'ironic/admin_username':            value => $admin_username_real;
+    'ironic/admin_password':            value => $admin_password_real;
     'ironic/admin_url':                 value => $admin_url;
     'ironic/admin_tenant_name':         value => $admin_tenant_name;
     'ironic/api_endpoint':              value => $api_endpoint;
diff --git a/nova/manifests/keystone/auth.pp b/nova/manifests/keystone/auth.pp
index 55bc4ab..25f7d2f 100644
--- a/nova/manifests/keystone/auth.pp
+++ b/nova/manifests/keystone/auth.pp
@@ -25,6 +25,18 @@
 #   Defaults to the value of auth_name_v3, but must differ from the value
 #   of service_name.
 #
+# [*service_description*]
+#   (optional) Description for keystone service.
+#   Defaults to 'Openstack Compute Service'.
+#
+# [*service_description_v3*]
+#   (optional) Description for keystone v3 service.
+#   Defaults to 'Openstack Compute Service v3'.
+#
+# [*service_description_ec2*]
+#   (optional) Description for keystone ec2 service.
+#   Defaults to 'EC2 Service'.
+#
 # [*public_url*]
 #   (optional) The endpoint's public url. (Defaults to 'http://127.0.0.1:8774/v2/%(tenant_id)s')
 #   This url should *not* contain any version or trailing '/'.
@@ -140,37 +152,40 @@
 #
 class nova::keystone::auth(
   $password,
-  $auth_name              = 'nova',
-  $auth_name_v3           = 'novav3',
-  $service_name           = undef,
-  $service_name_v3        = undef,
-  $region                 = 'RegionOne',
-  $tenant                 = 'services',
-  $email                  = 'nova@localhost',
-  $public_url             = 'http://127.0.0.1:8774/v2/%(tenant_id)s',
-  $internal_url           = 'http://127.0.0.1:8774/v2/%(tenant_id)s',
-  $admin_url              = 'http://127.0.0.1:8774/v2/%(tenant_id)s',
-  $public_url_v3          = 'http://127.0.0.1:8774/v3',
-  $internal_url_v3        = 'http://127.0.0.1:8774/v3',
-  $admin_url_v3           = 'http://127.0.0.1:8774/v3',
-  $ec2_public_url         = 'http://127.0.0.1:8773/services/Cloud',
-  $ec2_internal_url       = 'http://127.0.0.1:8773/services/Cloud',
-  $ec2_admin_url          = 'http://127.0.0.1:8773/services/Admin',
-  $configure_ec2_endpoint = true,
-  $configure_endpoint     = true,
-  $configure_endpoint_v3  = true,
-  $configure_user         = true,
-  $configure_user_role    = true,
+  $auth_name               = 'nova',
+  $auth_name_v3            = 'novav3',
+  $service_name            = undef,
+  $service_name_v3         = undef,
+  $service_description     = 'Openstack Compute Service',
+  $service_description_v3  = 'Openstack Compute Service v3',
+  $service_description_ec2 = 'EC2 Service',
+  $region                  = 'RegionOne',
+  $tenant                  = 'services',
+  $email                   = 'nova@localhost',
+  $public_url              = 'http://127.0.0.1:8774/v2/%(tenant_id)s',
+  $internal_url            = 'http://127.0.0.1:8774/v2/%(tenant_id)s',
+  $admin_url               = 'http://127.0.0.1:8774/v2/%(tenant_id)s',
+  $public_url_v3           = 'http://127.0.0.1:8774/v3',
+  $internal_url_v3         = 'http://127.0.0.1:8774/v3',
+  $admin_url_v3            = 'http://127.0.0.1:8774/v3',
+  $ec2_public_url          = 'http://127.0.0.1:8773/services/Cloud',
+  $ec2_internal_url        = 'http://127.0.0.1:8773/services/Cloud',
+  $ec2_admin_url           = 'http://127.0.0.1:8773/services/Admin',
+  $configure_ec2_endpoint  = true,
+  $configure_endpoint      = true,
+  $configure_endpoint_v3   = true,
+  $configure_user          = true,
+  $configure_user_role     = true,
   # DEPRECATED PARAMETERS
-  $compute_version        = undef,
-  $compute_port           = undef,
-  $ec2_port               = undef,
-  $public_protocol        = undef,
-  $public_address         = undef,
-  $admin_protocol         = undef,
-  $admin_address          = undef,
-  $internal_protocol      = undef,
-  $internal_address       = undef,
+  $compute_version         = undef,
+  $compute_port            = undef,
+  $ec2_port                = undef,
+  $public_protocol         = undef,
+  $public_address          = undef,
+  $admin_protocol          = undef,
+  $admin_address           = undef,
+  $internal_protocol       = undef,
+  $internal_address        = undef,
 ) {
 
   if $compute_version {
@@ -310,7 +325,7 @@ class nova::keystone::auth(
     configure_user_role => $configure_user_role,
     configure_endpoint  => $configure_endpoint,
     service_type        => 'compute',
-    service_description => 'Openstack Compute Service',
+    service_description => $service_description,
     service_name        => $real_service_name,
     region              => $region,
     auth_name           => $auth_name,
@@ -328,7 +343,7 @@ class nova::keystone::auth(
     configure_endpoint  => $configure_endpoint_v3,
     configure_service   => $configure_endpoint_v3,
     service_type        => 'computev3',
-    service_description => 'Openstack Compute Service v3',
+    service_description => $service_description_v3,
     service_name        => $real_service_name_v3,
     region              => $region,
     auth_name           => $auth_name_v3,
@@ -343,7 +358,7 @@ class nova::keystone::auth(
     configure_endpoint  => $configure_ec2_endpoint,
     configure_service   => $configure_ec2_endpoint,
     service_type        => 'ec2',
-    service_description => 'EC2 Service',
+    service_description => $service_description_ec2,
     service_name        => "${real_service_name}_ec2",
     region              => $region,
     auth_name           => "${auth_name}_ec2",
diff --git a/nova/manifests/scheduler.pp b/nova/manifests/scheduler.pp
index ff7298d..97955c3 100644
--- a/nova/manifests/scheduler.pp
+++ b/nova/manifests/scheduler.pp
@@ -16,10 +16,15 @@
 #   (optional) The state of the scheduler package
 #   Defaults to 'present'
 #
+# [*scheduler_driver*]
+#   (optional) Default driver to use for the scheduler
+#   Defaults to 'nova.scheduler.host_manager.HostManager'
+#
 class nova::scheduler(
-  $enabled        = false,
-  $manage_service = true,
-  $ensure_package = 'present'
+  $enabled          = false,
+  $manage_service   = true,
+  $ensure_package   = 'present',
+  $scheduler_driver = 'nova.scheduler.host_manager.HostManager',
 ) {
 
   include ::nova::db
@@ -33,4 +38,10 @@ class nova::scheduler(
     ensure_package => $ensure_package,
   }
 
+  nova_config {
+    'DEFAULT/scheduler_driver': value => $scheduler_driver;
+  }
+
+  Nova_config['DEFAULT/scheduler_driver'] ~> Service <| title == 'nova-scheduler' |>
+
 }
diff --git a/nova/metadata.json b/nova/metadata.json
index 20bb959..a42c33a 100644
--- a/nova/metadata.json
+++ b/nova/metadata.json
@@ -37,7 +37,7 @@
     { "name": "stackforge/glance", "version_requirement": ">=5.0.0 <6.0.0" },
     { "name": "puppetlabs/inifile", "version_requirement": ">=1.0.0 <2.0.0" },
     { "name": "stackforge/keystone", "version_requirement": ">=5.0.0 <6.0.0" },
-    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <4.0.0" },
+    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <6.0.0" },
     { "name": "puppetlabs/stdlib", "version_requirement": ">=4.0.0 <5.0.0" },
     { "name": "stackforge/openstacklib", "version_requirement": ">=5.0.0 <6.0.0" }
   ]
diff --git a/nova/spec/classes/nova_compute_ironic_spec.rb b/nova/spec/classes/nova_compute_ironic_spec.rb
index e4c5147..d5433f7 100644
--- a/nova/spec/classes/nova_compute_ironic_spec.rb
+++ b/nova/spec/classes/nova_compute_ironic_spec.rb
@@ -1,4 +1,5 @@
 require 'spec_helper'
+
 describe 'nova::compute::ironic' do
 
   it 'configures ironic in nova.conf' do
@@ -10,4 +11,16 @@ describe 'nova::compute::ironic' do
     is_expected.to contain_nova_config('DEFAULT/compute_driver').with_value('nova.virt.ironic.IronicDriver')
   end
 
+  context 'with deprecated parameters' do
+
+    let :params do
+      {:admin_user   => 'ironic-user',
+       :admin_passwd => 'ironic-s3cr3t'}
+    end
+
+    it 'configures ironic in nova.conf' do
+      is_expected.to contain_nova_config('ironic/admin_username').with_value('ironic-user')
+      is_expected.to contain_nova_config('ironic/admin_password').with_value('ironic-s3cr3t')
+    end
+  end
 end
diff --git a/nova/spec/classes/nova_scheduler_spec.rb b/nova/spec/classes/nova_scheduler_spec.rb
index 90dbc67..9b589eb 100644
--- a/nova/spec/classes/nova_scheduler_spec.rb
+++ b/nova/spec/classes/nova_scheduler_spec.rb
@@ -24,6 +24,8 @@ describe 'nova::scheduler' do
       :ensure    => 'running'
     )}
 
+    it { is_expected.to contain_nova_config('DEFAULT/scheduler_driver').with_value('nova.scheduler.host_manager.HostManager') }
+
     context 'with manage_service as false' do
       let :params do
         { :enabled        => true,
@@ -43,6 +45,14 @@ describe 'nova::scheduler' do
       )}
     end
 
+    context 'with scheduler driver' do
+      let :params do
+        { :scheduler_driver => 'custom driver' }
+      end
+
+      it { is_expected.to contain_nova_config('DEFAULT/scheduler_driver').with_value('custom driver') }
+    end
+
     context 'with default database parameters' do
       let :pre_condition do
         "include nova"
diff --git a/nova/spec/spec_helper_acceptance.rb b/nova/spec/spec_helper_acceptance.rb
index ccfaf1f..429e807 100644
--- a/nova/spec/spec_helper_acceptance.rb
+++ b/nova/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,32 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','duritong/sysctl'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      shell('git clone https://git.openstack.org/openstack/puppet-cinder /etc/puppet/modules/cinder')
-      shell('git clone https://git.openstack.org/openstack/puppet-glance /etc/puppet/modules/glance')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'nova')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/openstack_extras/manifests/auth_file.pp b/openstack_extras/manifests/auth_file.pp
index 193df36..ab21a2f 100644
--- a/openstack_extras/manifests/auth_file.pp
+++ b/openstack_extras/manifests/auth_file.pp
@@ -64,6 +64,10 @@
 #   (optional) The method to use for authentication
 #   Defaults to 'keystone'.
 #
+# [*path*]
+#   (optional) File path
+#   Defaults to '/root/openrc'.
+#
 class openstack_extras::auth_file(
   $password                 = undef,
   $auth_url                 = 'http://127.0.0.1:5000/v2.0/',
@@ -79,11 +83,12 @@ class openstack_extras::auth_file(
   $nova_endpoint_type       = 'publicURL',
   $neutron_endpoint_type    = 'publicURL',
   $auth_strategy            = 'keystone',
+  $path                     = '/root/openrc',
 ) {
   if ! $password {
     fail('You must specify a password for openstack_extras::auth_file')
   }
-  file { '/root/openrc':
+  file { $path:
     owner   => 'root',
     group   => 'root',
     mode    => '0700',
diff --git a/openstack_extras/spec/classes/openstack_extras_auth_file_spec.rb b/openstack_extras/spec/classes/openstack_extras_auth_file_spec.rb
index 6052b07..1e695b8 100644
--- a/openstack_extras/spec/classes/openstack_extras_auth_file_spec.rb
+++ b/openstack_extras/spec/classes/openstack_extras_auth_file_spec.rb
@@ -83,4 +83,16 @@ describe 'openstack_extras::auth_file' do
       ])
     end
   end
+
+  describe "when the file is in /tmp" do
+
+    let :params do
+      {
+        :password => 'secret',
+        :path     => '/tmp/openrc'
+      }
+    end
+
+   it { should contain_file('/tmp/openrc')}
+  end
 end
diff --git a/openstacklib/Gemfile b/openstacklib/Gemfile
index 1fce4aa..64b60e7 100644
--- a/openstacklib/Gemfile
+++ b/openstacklib/Gemfile
@@ -18,6 +18,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'mocha'
   gem 'json'
 end
diff --git a/openstacklib/metadata.json b/openstacklib/metadata.json
index 3bd6d9f..bc79e79 100644
--- a/openstacklib/metadata.json
+++ b/openstacklib/metadata.json
@@ -34,7 +34,7 @@
     { "name": "puppetlabs/apache", "version_requirement": ">=1.0.0 <2.0.0" },
     { "name": "puppetlabs/mysql", "version_requirement": ">=3.0.0 <4.0.0" },
     { "name": "puppetlabs/stdlib", "version_requirement": ">=4.0.0 <5.0.0" },
-    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <4.0.0" },
+    { "name": "puppetlabs/rabbitmq", "version_requirement": ">=2.0.2 <6.0.0" },
     { "name": "puppetlabs/postgresql", "version_requirement": ">=3.3.0 <4.0.0" }
   ]
 }
diff --git a/openstacklib/spec/acceptance/rabbitmq_spec.rb b/openstacklib/spec/acceptance/rabbitmq_spec.rb
index 51e8e99..82854e5 100644
--- a/openstacklib/spec/acceptance/rabbitmq_spec.rb
+++ b/openstacklib/spec/acceptance/rabbitmq_spec.rb
@@ -9,21 +9,12 @@ describe 'openstacklib class' do
       Exec { logoutput => 'on_failure' }
 
       if $::osfamily == 'RedHat' {
-        # RabbitMQ is not available in default repo
         class { '::openstack_extras::repo::redhat::redhat':
-          # Kilo is not GA yet, so let's use the testing repo
-          manage_rdo => false,
-          repo_hash  => {
-            'rdo-kilo-testing' => {
-              'baseurl'  => 'https://repos.fedorapeople.org/repos/openstack/openstack-kilo/testing/el7/',
-              # packages are not GA so not signed
-              'gpgcheck' => '0',
-              'priority' => 97,
-            },
-          },
+          release => 'kilo',
         }
         $package_provider = 'yum'
       } else {
+        include ::apt
         $package_provider = 'apt'
       }
 
diff --git a/openstacklib/spec/spec_helper_acceptance.rb b/openstacklib/spec/spec_helper_acceptance.rb
index 1879cbf..429e807 100644
--- a/openstacklib/spec/spec_helper_acceptance.rb
+++ b/openstacklib/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,21 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-apache'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-postgresql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-      # until https://github.com/tamaskozak/puppetlabs-rabbitmq/commit/8bbfe320035fae2ae900211501008d63dc3c171c is part of a release
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq /etc/puppet/modules/rabbitmq')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
+
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'openstacklib')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/sahara/Gemfile b/sahara/Gemfile
index 248993a..45906a6 100644
--- a/sahara/Gemfile
+++ b/sahara/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/sahara/metadata.json b/sahara/metadata.json
index 6ac0c37..bc78a76 100644
--- a/sahara/metadata.json
+++ b/sahara/metadata.json
@@ -29,7 +29,7 @@
   "dependencies": [
     { "name": "duritong/sysctl", "version_requirement": ">=0.0.1 <1.0.0" },
     { "name": "stackforge/keystone", "version_requirement": ">=5.0.0 <6.0.0" },
-    { "name": "puppetlabs/inifile", "version_requirement": ">=5.0.0 <6.0.0" },
+    { "name": "puppetlabs/inifile", "version_requirement": ">=1.0.0 <2.0.0" },
     { "name": "puppetlabs/stdlib", "version_requirement": ">=4.0.0 <5.0.0" },
     { "name": "puppetlabs/postgresql", "version_requirement": ">=3.0.0" },
     { "name": "stackforge/openstacklib", "version_requirement": ">=5.0.0" }
diff --git a/sahara/spec/spec_helper_acceptance.rb b/sahara/spec/spec_helper_acceptance.rb
index 46a720d..429e807 100644
--- a/sahara/spec/spec_helper_acceptance.rb
+++ b/sahara/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,31 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','duritong/sysctl'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'sahara')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/swift/Gemfile b/swift/Gemfile
index 3c0b875..9ea2113 100644
--- a/swift/Gemfile
+++ b/swift/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/swift/manifests/init.pp b/swift/manifests/init.pp
index 2e2a53d..7416c58 100644
--- a/swift/manifests/init.pp
+++ b/swift/manifests/init.pp
@@ -12,6 +12,10 @@
 # [*client_package_ensure*] The ensure state for the swift client package.
 #   (Optional) Defaults to present.
 #
+# [*max_header_size*] Max HTTP header size for incoming requests for all swift
+#   services. Recommended size is 32768 for PKI keystone tokens.
+#   (Optional) Defaults to 8192
+#
 # == Dependencies
 #
 # None
@@ -28,6 +32,7 @@ class swift(
   $swift_hash_suffix,
   $package_ensure        = 'present',
   $client_package_ensure = 'present',
+  $max_header_size       = '8192',
 ) {
 
   include ::swift::params
@@ -68,4 +73,7 @@ class swift(
   swift_config { 'swift-hash/swift_hash_path_suffix':
     value => $swift_hash_suffix,
   }
+  swift_config { 'swift-constraints/max_header_size':
+    value => $max_header_size,
+  }
 }
diff --git a/swift/spec/classes/swift_spec.rb b/swift/spec/classes/swift_spec.rb
index c9f1df0..33324f7 100644
--- a/swift/spec/classes/swift_spec.rb
+++ b/swift/spec/classes/swift_spec.rb
@@ -3,7 +3,10 @@ require 'spec_helper'
 describe 'swift' do
 
   let :params do
-    {:swift_hash_suffix => 'string'}
+    {
+      :swift_hash_suffix => 'string',
+      :max_header_size   => '16384',
+    }
   end
 
   let :facts do
@@ -51,6 +54,10 @@ describe 'swift' do
       is_expected.to contain_swift_config(
         'swift-hash/swift_hash_path_suffix').with_value('string')
     end
+    it 'configures swift.conf' do
+      is_expected.to contain_swift_config(
+        'swift-constraints/max_header_size').with_value('16384')
+    end
     it { is_expected.to contain_package('swift').with_ensure('present') }
   end
 
diff --git a/swift/spec/spec_helper_acceptance.rb b/swift/spec/spec_helper_acceptance.rb
index 5ce3b69..429e807 100644
--- a/swift/spec/spec_helper_acceptance.rb
+++ b/swift/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,28 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-concat','--version','1.2.2'), { :acceptable_exit_codes => 0 }
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt', '--version', '1.8.0'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-rsync'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','saz-memcached'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'swift')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/tempest/Gemfile b/tempest/Gemfile
index 212eec8..e284b8b 100644
--- a/tempest/Gemfile
+++ b/tempest/Gemfile
@@ -16,6 +16,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/tempest/manifests/init.pp b/tempest/manifests/init.pp
index b2d58c1..e60520a 100644
--- a/tempest/manifests/init.pp
+++ b/tempest/manifests/init.pp
@@ -33,6 +33,12 @@ class tempest(
   #
   $identity_uri              = undef,
   $cli_dir                   = undef,
+  $lock_path                 = '/var/lib/tempest',
+  $debug                     = false,
+  $verbose                   = false,
+  $use_stderr                = true,
+  $use_syslog                = false,
+  $log_file                  = undef,
   # non admin user
   $username                  = undef,
   $password                  = undef,
@@ -71,7 +77,9 @@ class tempest(
   $horizon_available         = true,
   $neutron_available         = false,
   $nova_available            = true,
-  $swift_available           = false
+  $swift_available           = false,
+  $keystone_v2               = true,
+  $keystone_v3               = true,
 ) {
 
   include '::tempest::params'
@@ -159,6 +167,8 @@ class tempest(
     'identity/tenant_name':              value => $tenant_name;
     'identity/uri':                      value => $identity_uri;
     'identity/username':                 value => $username;
+    'identity-feature-enabled/api_v2':   value => $keystone_v2;
+    'identity-feature-enabled/api_v3':   value => $keystone_v3;
     'network/public_network_id':         value => $public_network_id;
     'network/public_router_id':          value => $public_router_id;
     'service_available/cinder':          value => $cinder_available;
@@ -171,6 +181,12 @@ class tempest(
     'service_available/swift':           value => $swift_available;
     'whitebox/db_uri':                   value => $whitebox_db_uri;
     'cli/cli_dir':                       value => $cli_dir;
+    'oslo_concurrency/lock_path':        value => $lock_path;
+    'DEFAULT/debug':                     value => $debug;
+    'DEFAULT/verbose':                   value => $verbose;
+    'DEFAULT/use_stderr':                value => $use_stderr;
+    'DEFAULT/use_syslog':                value => $use_syslog;
+    'DEFAULT/log_file':                  value => $log_file;
   }
 
   if $configure_images {
diff --git a/tempest/spec/classes/tempest_spec.rb b/tempest/spec/classes/tempest_spec.rb
index 478c3f4..38cec0b 100644
--- a/tempest/spec/classes/tempest_spec.rb
+++ b/tempest/spec/classes/tempest_spec.rb
@@ -175,6 +175,8 @@ describe 'tempest' do
           is_expected.to contain_tempest_config('identity/tenant_name').with(:value => nil)
           is_expected.to contain_tempest_config('identity/uri').with(:value => nil)
           is_expected.to contain_tempest_config('identity/username').with(:value => nil)
+          is_expected.to contain_tempest_config('identity-feature-enabled/api_v2').with(:value => true)
+          is_expected.to contain_tempest_config('identity-feature-enabled/api_v3').with(:value => true)
           is_expected.to contain_tempest_config('network/public_network_id').with(:value => nil)
           is_expected.to contain_tempest_config('network/public_router_id').with(:value => '')
           is_expected.to contain_tempest_config('service_available/cinder').with(:value => true)
@@ -187,6 +189,12 @@ describe 'tempest' do
           is_expected.to contain_tempest_config('service_available/swift').with(:value => false)
           is_expected.to contain_tempest_config('whitebox/db_uri').with(:value => nil)
           is_expected.to contain_tempest_config('cli/cli_dir').with(:value => nil)
+          is_expected.to contain_tempest_config('oslo_concurrency/lock_path').with(:value => '/var/lib/tempest')
+          is_expected.to contain_tempest_config('DEFAULT/debug').with(:value => false)
+          is_expected.to contain_tempest_config('DEFAULT/verbose').with(:value => false)
+          is_expected.to contain_tempest_config('DEFAULT/use_stderr').with(:value => true)
+          is_expected.to contain_tempest_config('DEFAULT/use_syslog').with(:value => false)
+          is_expected.to contain_tempest_config('DEFAULT/log_file').with(:value => nil)
         end
 
         it 'set glance id' do
diff --git a/tempest/spec/spec_helper_acceptance.rb b/tempest/spec/spec_helper_acceptance.rb
index 125e12b..429e807 100644
--- a/tempest/spec/spec_helper_acceptance.rb
+++ b/tempest/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,18 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-stdlib'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-vcsrepo'), { :acceptable_exit_codes => 0 }
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'tempest')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/tripleo/manifests/database/mysql.pp b/tripleo/manifests/database/mysql.pp
deleted file mode 100644
index 1d621a5..0000000
--- a/tripleo/manifests/database/mysql.pp
+++ /dev/null
@@ -1,367 +0,0 @@
-#
-# Copyright (C) 2015 eNovance SAS <licensing@enovance.com>
-#
-# Licensed under the Apache License, Version 2.0 (the "License"); you may
-# not use this file except in compliance with the License. You may obtain
-# a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless optional by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-# License for the specific language governing permissions and limitations
-# under the License.
-#
-# == Class: tripleo::database::mysql
-#
-# Configure a MySQL for TripleO with or without HA.
-#
-# === Parameters
-#
-# [*bind_address*]
-#   (optional) IP to bind MySQL daemon.
-#   Defaults to undef
-#
-# [*mysql_root_password*]
-#   (optional) MySQL root password.
-#   Defaults to 'secrete'
-#
-# [*mysql_sys_maint_password*]
-#   (optional) The MySQL debian-sys-maint password.
-#   Debian only parameter.
-#   Defaults to 'sys-maint'
-#
-# [*galera_clustercheck_dbpassword*]
-#   (optional) The MySQL password for Galera cluster check
-#   Defaults to 'password'
-#
-# [*galera_clustercheck_dbuser*]
-#   (optional) The MySQL username for Galera cluster check (using monitoring database)
-#   Defaults to 'clustercheck'
-#
-# [*galera_clustercheck_ipaddress*]
-#   (optional) The name or ip address of host running monitoring database (clustercheck)
-#   Defaults to undef
-#
-# [*galera_gcache*]
-#   (optional) Size of the Galera gcache
-#   wsrep_provider_options, for master/slave mode
-#   Defaults to '1G'
-#
-# [*galera_master*]
-#   (optional) Hostname or IP of the Galera master node, databases and users
-#   resources are created on this node and propagated on the cluster.
-#   Defining to false means we disable MySQL HA and run a single node setup.
-#   Defaults to false
-#
-# [*controller_host*]
-#   (optional) Array of internal ip of the controller nodes.
-#   They need access to all OpenStack databases.
-#   Defaults to false
-#
-# [*database_host*]
-#   (optional) Array of internal ip of the database nodes.
-#   Used to boostrap Galera cluster.
-#   Defaults to false
-#
-# [*ceilometer_database_connection*]
-#   (optional) URL to connect at Ceilometer database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-# [*cinder_database_connection*]
-#   (optional) URL to connect at Cinder database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-# [*glance_database_connection*]
-#   (optional) URL to connect at Glance database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-# [*heat_database_connection*]
-#   (optional) URL to connect at Heat database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-# [*keystone_database_connection*]
-#   (optional) URL to connect at Keystone database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-# [*neutron_database_connection*]
-#   (optional) URL to connect at Neutron database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-# [*nova_database_connection*]
-#   (optional) URL to connect at Nova database.
-#   Example: 'mysql://user:password@host/database'
-#   Defaults to undef
-#
-class tripleo::database::mysql (
-  $bind_address                   = undef,
-  $mysql_root_password            = 'secrete',
-  $mysql_sys_maint_password       = 'sys-maint',
-  $galera_clustercheck_dbpassword = 'secrete',
-  $galera_clustercheck_dbuser     = 'clustercheck',
-  $galera_clustercheck_ipaddress  = undef,
-  $galera_gcache                  = '1G',
-  $galera_master                  = false,
-  $controller_host                = false,
-  $database_host                  = false,
-  $ceilometer_database_connection = undef,
-  $cinder_database_connection     = undef,
-  $glance_database_connection     = undef,
-  $heat_database_connection       = undef,
-  $keystone_database_connection   = undef,
-  $neutron_database_connection    = undef,
-  $nova_database_connection       = undef,
-) {
-
-  include ::xinetd
-
-  $gcomm_definition = inline_template('<%= @database_host.join(",") + "?pc.wait_prim=no" -%>')
-
-  # If HA enabled
-  if $galera_master {
-    # Specific to Galera master node
-    if $::hostname == $galera_master {
-      mysql_database { 'monitoring':
-        ensure  => 'present',
-        charset => 'utf8',
-        collate => 'utf8_unicode_ci',
-        require => File['/root/.my.cnf'],
-      }
-      mysql_user { "${galera_clustercheck_dbuser}@localhost":
-        ensure        => 'present',
-        password_hash => mysql_password($galera_clustercheck_dbpassword),
-        require       => File['/root/.my.cnf'],
-      }
-      mysql_grant { "${galera_clustercheck_dbuser}@localhost/monitoring":
-        ensure     => 'present',
-        options    => ['GRANT'],
-        privileges => ['ALL'],
-        table      => 'monitoring.*',
-        user       => "${galera_clustercheck_dbuser}@localhost",
-      }
-      Database_user<<| |>>
-    } else {
-      # NOTE(sileht): Only the master must create the password
-      # into the database, slave nodes must just use the password.
-      # The one in the database have been retrieved via galera.
-      file { "${::root_home}/.my.cnf":
-        content => "[client]\nuser=root\nhost=localhost\npassword=${mysql_root_password}\n",
-        owner   => 'root',
-        mode    => '0600',
-      }
-    }
-
-    # Specific to Red Hat or Debian systems
-    case $::osfamily {
-      'RedHat': {
-        $mysql_server_package_name = 'mariadb-galera-server'
-        $mysql_client_package_name = 'mariadb'
-        $wsrep_provider = '/usr/lib64/galera/libgalera_smm.so'
-        $mysql_server_config_file = '/etc/my.cnf'
-        $mysql_init_file = '/usr/lib/systemd/system/mysql-bootstrap.service'
-
-        if $::hostname == $galera_master {
-          $mysql_service_name = 'mysql-bootstrap'
-        } else {
-          $mysql_service_name = 'mariadb'
-        }
-
-        # In Red Hat, the package does not perform the mysql db installation.
-        # We need to do this manually.
-        # Note: in MariaDB repository, package perform this action in post-install,
-        # but MariaDB is not packaged for Red Hat / CentOS 7 in MariaDB repository.
-        exec { 'bootstrap-mysql':
-          command => '/usr/bin/mysql_install_db --rpm --user=mysql',
-          unless  => 'test -d /var/lib/mysql/mysql',
-          before  => Service['mysqld'],
-          require => [Package[$mysql_server_package_name], File[$mysql_server_config_file]],
-        }
-
-      }
-      'Debian': {
-        $mysql_server_package_name = 'mariadb-galera-server'
-        $mysql_client_package_name = 'mariadb-client'
-        $wsrep_provider = '/usr/lib/galera/libgalera_smm.so'
-        $mysql_server_config_file = '/etc/mysql/my.cnf'
-        $mysql_init_file = '/etc/init.d/mysql-bootstrap'
-
-        if $::hostname == $galera_master {
-          $mysql_service_name = 'mysql-bootstrap'
-        } else {
-          $mysql_service_name = 'mysql'
-        }
-
-        mysql_user { 'debian-sys-maint@localhost':
-          ensure        => 'present',
-          password_hash => mysql_password($mysql_sys_maint_password),
-          require       => File['/root/.my.cnf'],
-        }
-
-        file{'/etc/mysql/debian.cnf':
-          ensure  => file,
-          content => template('tripleo/database/debian.cnf.erb'),
-          owner   => 'root',
-          group   => 'root',
-          mode    => '0600',
-          require => Exec['clean-mysql-binlog'],
-        }
-      }
-      default: {
-        err "${::osfamily} not supported yet"
-      }
-    }
-
-    file { $mysql_init_file :
-      content => template("tripleo/database/etc_initd_mysql_${::osfamily}"),
-      owner   => 'root',
-      mode    => '0755',
-      group   => 'root',
-      notify  => Service['mysqld'],
-      before  => Package[$mysql_server_package_name],
-    }
-
-    class { '::mysql::server':
-      manage_config_file => false,
-      config_file        => $mysql_server_config_file,
-      package_name       => $mysql_server_package_name,
-      service_name       => $mysql_service_name,
-      override_options   => {
-        'mysqld' => {
-          'bind-address' => $bind_address,
-        },
-      },
-      root_password      => $mysql_root_password,
-      notify             => Service['xinetd'],
-    }
-
-    file { $mysql_server_config_file:
-      content => template('tripleo/database/mysql.conf.erb'),
-      mode    => '0644',
-      owner   => 'root',
-      group   => 'root',
-      notify  => [Service['mysqld'],Exec['clean-mysql-binlog']],
-      require => Package[$mysql_server_package_name],
-    }
-
-    class { '::mysql::client':
-      package_name => $mysql_client_package_name,
-    }
-
-    # Haproxy http monitoring
-    augeas { 'mysqlchk':
-      context => '/files/etc/services',
-      changes => [
-        'ins service-name after service-name[last()]',
-        'set service-name[last()] "mysqlchk"',
-        'set service-name[. = "mysqlchk"]/port 9200',
-        'set service-name[. = "mysqlchk"]/protocol tcp',
-      ],
-      onlyif  => 'match service-name[. = "mysqlchk"] size == 0',
-      notify  => [ Service['xinetd'], Exec['reload_xinetd'] ],
-    }
-    file {
-      '/etc/xinetd.d/mysqlchk':
-        content => template('tripleo/database/mysqlchk.erb'),
-        owner   => 'root',
-        group   => 'root',
-        mode    => '0755',
-        require => File['/usr/bin/clustercheck'],
-        notify  => [ Service['xinetd'], Exec['reload_xinetd'] ];
-      '/usr/bin/clustercheck':
-        ensure  => present,
-        content => template('tripleo/database/clustercheck.erb'),
-        mode    => '0755',
-        owner   => 'root',
-        group   => 'root';
-    }
-
-    exec{'clean-mysql-binlog':
-      # first sync take a long time
-      command     => "/bin/bash -c '/usr/bin/mysqladmin --defaults-file=/root/.my.cnf shutdown ; /bin/rm  ${::mysql::params::datadir}/ib_logfile*'",
-      path        => '/usr/bin',
-      notify      => Service['mysqld'],
-      refreshonly => true,
-      onlyif      => "stat ${::mysql::params::datadir}/ib_logfile0 && test `du -sh ${::mysql::params::datadir}/ib_logfile0 | cut -f1` != '256M'",
-    }
-  } else {
-    # When HA is disabled
-    class { '::mysql::server':
-      override_options => {
-        'mysqld' => {
-          'bind-address' => $bind_address,
-        },
-      },
-      root_password    => $mysql_root_password,
-    }
-  }
-
-  # On master node (when using Galera) or single node (when no HA)
-  if $galera_master == $::hostname or ! $galera_master {
-    # Create all the database schemas
-    $allowed_hosts = ['%',$controller_host]
-    $keystone_dsn = split($keystone_database_connection, '[@:/?]')
-    class { '::keystone::db::mysql':
-      user          => $keystone_dsn[3],
-      password      => $keystone_dsn[4],
-      host          => $keystone_dsn[5],
-      dbname        => $keystone_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-    $glance_dsn = split($glance_database_connection, '[@:/?]')
-    class { '::glance::db::mysql':
-      user          => $glance_dsn[3],
-      password      => $glance_dsn[4],
-      host          => $glance_dsn[5],
-      dbname        => $glance_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-    $nova_dsn = split($nova_database_connection, '[@:/?]')
-    class { '::nova::db::mysql':
-      user          => $nova_dsn[3],
-      password      => $nova_dsn[4],
-      host          => $nova_dsn[5],
-      dbname        => $nova_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-    $neutron_dsn = split($neutron_database_connection, '[@:/?]')
-    class { '::neutron::db::mysql':
-      user          => $neutron_dsn[3],
-      password      => $neutron_dsn[4],
-      host          => $neutron_dsn[5],
-      dbname        => $neutron_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-    $cinder_dsn = split($cinder_database_connection, '[@:/?]')
-    class { '::cinder::db::mysql':
-      user          => $cinder_dsn[3],
-      password      => $cinder_dsn[4],
-      host          => $cinder_dsn[5],
-      dbname        => $cinder_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-    $heat_dsn = split($heat_database_connection, '[@:/?]')
-    class { '::heat::db::mysql':
-      user          => $heat_dsn[3],
-      password      => $heat_dsn[4],
-      host          => $heat_dsn[5],
-      dbname        => $heat_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-    $ceilometer_dsn = split($ceilometer_database_connection, '[@:/?]')
-    class { '::ceilometer::db::mysql':
-      user          => $ceilometer_dsn[3],
-      password      => $ceilometer_dsn[4],
-      host          => $ceilometer_dsn[5],
-      dbname        => $ceilometer_dsn[6],
-      allowed_hosts => $allowed_hosts,
-    }
-  }
-
-}
diff --git a/tripleo/manifests/loadbalancer.pp b/tripleo/manifests/loadbalancer.pp
index f7a4ff8..f9877a6 100644
--- a/tripleo/manifests/loadbalancer.pp
+++ b/tripleo/manifests/loadbalancer.pp
@@ -538,6 +538,10 @@ class tripleo::loadbalancer (
       "${heat_api_vip}:8004" => [],
       "${public_virtual_ip}:13004" => ['ssl', 'crt', $heat_bind_certificate],
     }
+    $heat_options = {
+      'option' => [ 'httpchk GET /' ],
+      'rsprep' => "^Location:\\ http://${public_virtual_ip}(.*) Location:\\ https://${public_virtual_ip}\\1",
+    }
     $heat_cw_bind_opts = {
       "${heat_api_vip}:8003" => [],
       "${public_virtual_ip}:13003" => ['ssl', 'crt', $heat_bind_certificate],
@@ -551,6 +555,9 @@ class tripleo::loadbalancer (
       "${heat_api_vip}:8004" => [],
       "${public_virtual_ip}:8004" => [],
     }
+    $heat_options = {
+      'option' => [ 'httpchk GET /' ],
+    }
     $heat_cw_bind_opts = {
       "${heat_api_vip}:8003" => [],
       "${public_virtual_ip}:8003" => [],
@@ -824,10 +831,9 @@ class tripleo::loadbalancer (
   if $heat_api {
     haproxy::listen { 'heat_api':
       bind             => $heat_bind_opts,
-      options          => {
-        'option' => [ 'httpchk GET /' ],
-      },
+      options          => $heat_options,
       collect_exported => false,
+      mode             => 'http',
     }
     haproxy::balancermember { 'heat_api':
       listening_service => 'heat_api',
diff --git a/tripleo/manifests/packages.pp b/tripleo/manifests/packages.pp
new file mode 100644
index 0000000..6a5813a
--- /dev/null
+++ b/tripleo/manifests/packages.pp
@@ -0,0 +1,54 @@
+# Copyright 2015 Red Hat, Inc.
+# All Rights Reserved.
+#
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+# == Class: tripleo::packages
+#
+# Configure package installation/upgrade defaults.
+#
+# === Parameters:
+#
+# [*enable_install*]
+#  Whether to enable package installation via Puppet.
+#  Defaults to false
+#
+# [*enable_upgrade*]
+#  Upgrades all puppet managed packages to latest.
+#  Defaults to false
+#
+class tripleo::packages (
+  $enable_install = false,
+  $enable_upgrade = false,
+) {
+
+  if !$enable_install {
+    case $::osfamily {
+      'RedHat': {
+        Package <| |> { provider => 'norpm' }
+      }
+      default: {
+        warning('enable_install option not supported for this distro.')
+      }
+    }
+  }
+
+  if $enable_upgrade {
+    if !$enable_install {
+      fail('Package upgrades require that enable_install be set to true')
+    }
+    Package <| |> { ensure => 'latest' }
+  }
+
+}
+
diff --git a/trove/Gemfile b/trove/Gemfile
index 3c0b875..9ea2113 100644
--- a/trove/Gemfile
+++ b/trove/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/trove/spec/spec_helper_acceptance.rb b/trove/spec/spec_helper_acceptance.rb
index be6ca9e..429e807 100644
--- a/trove/spec/spec_helper_acceptance.rb
+++ b/trove/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,31 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
-      # install library modules from the forge
-      # pin apt module until openstack_extras use >= 2.0.0 version
-      on host, puppet('module','install','puppetlabs-apt','--version','1.8.0'), { :acceptable_exit_codes => 0 }
-
-      on host, puppet('module','install','puppetlabs-mysql'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','dprince/qpid'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','duritong/sysctl'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','puppetlabs-inifile'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
+      # Install the module being tested
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
 
-      # install puppet modules from git, use master
-      shell('git clone https://git.openstack.org/openstack/puppet-openstacklib /etc/puppet/modules/openstacklib')
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
-      shell('git clone https://git.openstack.org/openstack/puppet-keystone /etc/puppet/modules/keystone')
-      # TODO(EmilienM) Cloning RabbitMQ module for now because we wait for a release including
-      # https://github.com/enovance/puppetlabs-rabbitmq/commit/0227f762070ffbbea3c28d6a60174de98fa4cc1c
-      shell('git clone https://github.com/puppetlabs/puppetlabs-rabbitmq/ /etc/puppet/modules/rabbitmq')
+      on host, "rm -fr #{repo}"
 
-      # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'trove')
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
diff --git a/vswitch/Gemfile b/vswitch/Gemfile
index 3c0b875..9ea2113 100644
--- a/vswitch/Gemfile
+++ b/vswitch/Gemfile
@@ -17,6 +17,7 @@ group :development, :test do
   gem 'puppet-lint-numericvariable'
 
   gem 'beaker-rspec', :require => false
+  gem 'beaker-puppet_install_helper', :require => false
   gem 'json'
   gem 'webmock'
 end
diff --git a/vswitch/spec/spec_helper_acceptance.rb b/vswitch/spec/spec_helper_acceptance.rb
index 11ba02a..429e807 100644
--- a/vswitch/spec/spec_helper_acceptance.rb
+++ b/vswitch/spec/spec_helper_acceptance.rb
@@ -1,15 +1,12 @@
 require 'beaker-rspec'
+require 'beaker/puppet_install_helper'
 
-hosts.each do |host|
-
-  install_puppet
-
-  on host, "mkdir -p #{host['distmoduledir']}"
-end
+run_puppet_install_helper
 
 RSpec.configure do |c|
   # Project root
   proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
+  modname = JSON.parse(open('metadata.json').read)['name'].split('-')[1]
 
   # Readable test descriptions
   c.formatter = :documentation
@@ -22,18 +19,38 @@ RSpec.configure do |c|
       # install git
       install_package host, 'git'
 
-      # clean out any module cruft
-      shell('rm -fr /etc/puppet/modules/*')
-
-      # install library modules from the forge
-      on host, puppet('module','install','puppetlabs-stdlib'), { :acceptable_exit_codes => 0 }
-      on host, puppet('module','install','stahnma-epel'), { :acceptable_exit_codes => 0 }
-      shell('git clone https://git.openstack.org/openstack/puppet-openstack_extras /etc/puppet/modules/openstack_extras')
+      zuul_ref = ENV['ZUUL_REF']
+      zuul_branch = ENV['ZUUL_BRANCH']
+      zuul_url = ENV['ZUUL_URL']
+
+      repo = 'openstack/puppet-openstack-integration'
+
+      # Start out with clean moduledir, don't trust r10k to purge it
+      on host, "rm -rf /etc/puppet/modules/*"
+      # Install dependent modules via git or zuul
+      r = on host, "test -e /usr/zuul-env/bin/zuul-cloner", { :acceptable_exit_codes => [0,1] }
+      if r.exit_code == 0
+        zuul_clone_cmd = '/usr/zuul-env/bin/zuul-cloner '
+        zuul_clone_cmd += '--cache-dir /opt/git '
+        zuul_clone_cmd += "--zuul-ref #{zuul_ref} "
+        zuul_clone_cmd += "--zuul-branch #{zuul_branch} "
+        zuul_clone_cmd += "--zuul-url #{zuul_url} "
+        zuul_clone_cmd += "git://git.openstack.org #{repo}"
+        on host, zuul_clone_cmd
+      else
+        on host, "git clone https://git.openstack.org/#{repo} #{repo}"
+      end
+
+      on host, "ZUUL_REF=#{zuul_ref} ZUUL_BRANCH=#{zuul_branch} ZUUL_URL=#{zuul_url} bash #{repo}/install_modules.sh"
 
       # Install the module being tested
-      puppet_module_install(:source => proj_root, :module_name => 'vswitch')
+      on host, "rm -fr /etc/puppet/modules/#{modname}"
+      puppet_module_install(:source => proj_root, :module_name => modname)
+
+      on host, "rm -fr #{repo}"
+
       # List modules installed to help with debugging
-      on hosts[0], puppet('module','list'), { :acceptable_exit_codes => 0 }
+      on host, puppet('module','list'), { :acceptable_exit_codes => 0 }
     end
   end
 end
