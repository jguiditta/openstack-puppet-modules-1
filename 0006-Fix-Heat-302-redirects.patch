From db6c946c475969e4ba788300ede6bd03bfd6f856 Mon Sep 17 00:00:00 2001
From: Ben Nemec <bnemec@redhat.com>
Date: Mon, 29 Jun 2015 22:27:00 +0000
Subject: [PATCH] Fix Heat 302 redirects

When doing a heat stack-show, Heat initially returns a 302 redirect.
With the existing loadbalancer config for SSL, this results in a
redirect to an http:// address pointing at the SSL port, which
naturally doesn't work.

The fix for this is to use the rsprep haproxy option to rewrite the
Location header in responses from the Heat api server.  This allows
us to properly handle redirect traffic as https.

Also note that http header rewriting requires "mode http", so that
is added here as well.

Change-Id: I7e5c5b1877e9aa46c4b88dfba45c1fddf61727fc
(cherry picked from commit e8714e037268807d2fcdb735b8df7c958c8570ab)
Related: rhbz#1230890
---

diff --git a/tripleo/manifests/loadbalancer.pp b/tripleo/manifests/loadbalancer.pp
index e94f44a..f476438 100644
--- a/tripleo/manifests/loadbalancer.pp
+++ b/tripleo/manifests/loadbalancer.pp
@@ -527,6 +527,10 @@
       "${heat_api_vip}:8004" => [],
       "${public_virtual_ip}:13004" => ['ssl', 'crt', $heat_bind_certificate],
     }
+    $heat_options = {
+      'option' => [ 'httpchk GET /' ],
+      'rsprep' => "^Location:\\ http://${public_virtual_ip}(.*) Location:\\ https://${public_virtual_ip}\\1",
+    }
     $heat_cw_bind_opts = {
       "${heat_api_vip}:8003" => [],
       "${public_virtual_ip}:13003" => ['ssl', 'crt', $heat_bind_certificate],
@@ -539,6 +543,9 @@
     $heat_bind_opts = {
       "${heat_api_vip}:8004" => [],
       "${public_virtual_ip}:8004" => [],
+    }
+    $heat_options = {
+      'option' => [ 'httpchk GET /' ],
     }
     $heat_cw_bind_opts = {
       "${heat_api_vip}:8003" => [],
@@ -800,10 +807,9 @@
   if $heat_api {
     haproxy::listen { 'heat_api':
       bind             => $heat_bind_opts,
-      options          => {
-        'option' => [ 'httpchk GET /' ],
-      },
+      options          => $heat_options,
       collect_exported => false,
+      mode             => 'http',
     }
     haproxy::balancermember { 'heat_api':
       listening_service => 'heat_api',
