From b5e06ad64c3fa195028925c2e526da459984e7c2 Mon Sep 17 00:00:00 2001
From: Ryan Hallisey <rhallise@redhat.com>
Date: Fri, 19 Dec 2014 07:52:31 -0500
Subject: [PATCH] Fix Ironic modules so services properly run

Initially, the module was not creating an ironic.conf file and now
it does.  The configurations that are being put into the ironic.conf
file come straight out of the documentation.

The package 'python-pbr' is required and was not being installed
elsewhere so it is installed by the init module.

The ironic-conductor service requires the execution of 'ironic-dbsync'
before it can be active.

In the params module, the 'RedHat' packages and services were named
incorrectly or were otherwise missing.
---
 ironic/examples/ironic.pp  |  2 +-
 ironic/manifests/api.pp    | 18 ++++++++++++++----
 ironic/manifests/init.pp   | 40 ++++++++++++++++++++++++++++------------
 ironic/manifests/params.pp | 29 +++++++++++++++++------------
 4 files changed, 60 insertions(+), 29 deletions(-)

diff --git a/ironic/examples/ironic.pp b/ironic/examples/ironic.pp
index c4096ae..e80680c 100644
--- a/ironic/examples/ironic.pp
+++ b/ironic/examples/ironic.pp
@@ -31,7 +31,7 @@ $glance_api_servers = 'glance:9292'
 $deploy_kernel  = 'glance://deploy_kernel_uuid'
 $deploy_ramdisk = 'glance://deploy_ramdisk_uuid'
 
-node db {
+node 'db' {
 
   class { 'mysql::server':
     config_hash => {
diff --git a/ironic/manifests/api.pp b/ironic/manifests/api.pp
index 6b50a62..8904d09 100644
--- a/ironic/manifests/api.pp
+++ b/ironic/manifests/api.pp
@@ -68,6 +68,10 @@
 #   (optional) The name of the user to create in keystone for use by the ironic services
 #   Defaults to 'ironic'
 #
+# [*neutron_url*]
+#   (optional) The Neutron URL to be used for requests from ironic
+#   Defaults to false
+#
 # [*admin_password*]
 #   (required) The password to set for the ironic admin user in keystone
 #
@@ -79,13 +83,14 @@ class ironic::api (
   $port              = '6385',
   $max_limit         = '1000',
   $auth_host         = '127.0.0.1',
-  $auth_port         = 35357,
+  $auth_port         = '35357',
   $auth_protocol     = 'http',
   $auth_uri          = false,
   $auth_admin_prefix = false,
   $auth_version      = false,
   $admin_tenant_name = 'services',
   $admin_user        = 'ironic',
+  $neutron_url       = false,
   $admin_password,
 ) {
 
@@ -97,8 +102,8 @@ class ironic::api (
 
   # Configure ironic.conf
   ironic_config {
-    'api/host_ip': value   => $host_ip;
-    'api/port': value      => $port;
+    'api/host_ip':   value => $host_ip;
+    'api/port':      value => $port;
     'api/max_limit': value => $max_limit;
   }
 
@@ -127,6 +132,12 @@ class ironic::api (
     hasstatus => true,
   }
 
+  if $neutron_url {
+    ironic_config { 'neutron/url': value => $neutron_url; }
+  } else {
+    ironic_config { 'neutron/url': value => "${auth_protocol}://${auth_host}:9696/"; }
+  }
+
   if $auth_uri {
     ironic_config { 'keystone_authtoken/auth_uri': value => $auth_uri; }
   } else {
@@ -159,5 +170,4 @@ class ironic::api (
     }
   }
 
-
 }
diff --git a/ironic/manifests/init.pp b/ironic/manifests/init.pp
index ab59b24..7e3ce4e 100644
--- a/ironic/manifests/init.pp
+++ b/ironic/manifests/init.pp
@@ -156,25 +156,32 @@ class ironic (
 
   include ironic::params
 
-  Package['ironic'] -> Ironic_config<||>
-
-  File {
-    require => Package['ironic'],
-    owner   => 'root',
-    group   => 'ironic',
-    mode    => '0640',
-  }
+  Package['ironic-common'] -> Ironic_config<||>
 
   file { '/etc/ironic':
     ensure  => directory,
+    require => Package['ironic-common'],
+    owner   => 'root',
+    group   => 'ironic',
     mode    => '0750',
   }
 
-  file { '/etc/ironic/ironic.conf': }
+  file { '/etc/ironic/ironic.conf':
+    require => Package['ironic-common'],
+    owner   => 'root',
+    group   => 'ironic',
+    mode    => '0640',
+  }
 
-  package { 'ironic':
+  package { 'python-pbr':
     ensure => $package_ensure,
-    name   => $::ironic::params::package_name,
+    name   => $::ironic::params::pbr_package,
+  }
+
+  package { 'ironic-common':
+    ensure  => $package_ensure,
+    name    => $::ironic::params::common_package_name,
+    require => Package['python-pbr'],
   }
 
   validate_re($database_connection, '(sqlite|mysql|postgresql):\/\/(\S+:\S+@\S+\/\S+)?')
@@ -182,7 +189,6 @@ class ironic (
   case $database_connection {
     /mysql:\/\/\S+:\S+@\S+\/\S+/: {
       $database_backend_package = false
-      require 'mysql::python'
     }
     /postgresql:\/\/\S+:\S+@\S+\/\S+/: {
       $database_backend_package = 'python-psycopg2'
@@ -226,6 +232,16 @@ class ironic (
     'glance/glance_api_insecure':      value => $glance_api_insecure;
   }
 
+  Ironic_config['database/connection'] ~> Exec['ironic-dbsync']
+
+  exec { 'ironic-dbsync':
+    command     => $::ironic::params::dbsync_command,
+    path        => '/usr/bin',
+    user        => 'ironic',
+    refreshonly => true,
+    logoutput   => on_failure,
+  }
+
   if $rpc_backend == 'ironic.openstack.common.rpc.impl_kombu' {
     if ! $rabbit_password {
       fail('When rpc_backend is rabbitmq, you must set rabbit password')
diff --git a/ironic/manifests/params.pp b/ironic/manifests/params.pp
index a9dc9f5..c1c93c7 100644
--- a/ironic/manifests/params.pp
+++ b/ironic/manifests/params.pp
@@ -20,22 +20,27 @@
 
 class ironic::params {
 
+  $dbsync_command =
+    'ironic-dbsync --config-file /etc/ironic/ironic.conf'
+
   case $::osfamily {
     'RedHat': {
-      $package_name       = 'openstack-ironic'
-      $api_package        = false
-      $conductor_package  = false
-      $api_service        = 'ironic-api'
-      $conductor_service  = 'ironic-conductor'
-      $client_package     = 'python-ironicclient'
+      $common_package_name = 'openstack-ironic-common'
+      $api_package         = 'openstack-ironic-api'
+      $api_service         = 'openstack-ironic-api'
+      $conductor_package   = 'openstack-ironic-conductor'
+      $conductor_service   = 'openstack-ironic-conductor'
+      $client_package      = 'python-ironicclient'
+      $pbr_package         = 'python-pbr'
     }
     'Debian': {
-      $package_name       = 'ironic-common'
-      $api_service        = 'ironic-api'
-      $conductor_service  = 'ironic-conductor'
-      $api_package        = 'ironic-api'
-      $conductor_package  = 'ironic-conductor'
-      $client_package     = 'python-ironicclient'
+      $common_package_name = 'ironic-common'
+      $api_service         = 'ironic-api'
+      $api_package         = 'ironic-api'
+      $conductor_service   = 'ironic-conductor'
+      $conductor_package   = 'ironic-conductor'
+      $client_package      = 'python-ironicclient'
+      $pbr_package         = 'python-pbr'
     }
     default: {
       fail("Unsupported osfamily ${::osfamily}")
